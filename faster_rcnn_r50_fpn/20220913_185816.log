2022-09-13 18:58:16,364 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.7 (default, May  7 2020, 21:25:33) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: GeForce RTX 3090
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.0, V11.0.194
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.7.0+cu110
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80
  - CuDNN 8.0.4
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.1+cu110
OpenCV: 4.6.0
MMCV: 1.6.1
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.25.1+df28da9
------------------------------------------------------------

2022-09-13 18:58:16,720 - mmdet - INFO - Distributed training: False
2022-09-13 18:58:17,064 - mmdet - INFO - Config:
dataset_type = 'CocoDataset'
data_root = '/home/hhn/mmdetection/20220830'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1500, 1000), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1500, 1000),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/train3.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1500, 1000), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/val3.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1500, 1000),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/val3.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1500, 1000),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=12)
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/hhn/mmdetection/pretrained/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=8)
model = dict(
    type='FasterRCNN',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=None),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=8,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
work_dir = './work_dirs/faster_rcnn_r50_fpn'
auto_resume = False
gpu_ids = [0]

2022-09-13 18:58:17,065 - mmdet - INFO - Set random seed to 2086416907, deterministic: False
2022-09-13 18:58:17,445 - mmdet - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': 'Conv2d'}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2022-09-13 18:58:17,782 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,785 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,787 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,792 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,815 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,841 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,844 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,856 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,860 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,863 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,868 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,871 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,875 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,886 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,890 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,892 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 18:58:17,914 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2022-09-13 18:58:17,945 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2022-09-13 18:58:17,952 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([9, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([9]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([32, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([32]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2022-09-13 18:58:21,327 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2022-09-13 18:58:21,346 - mmdet - INFO - load checkpoint from local path: /home/hhn/mmdetection/pretrained/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth
2022-09-13 18:58:21,486 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for roi_head.bbox_head.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([9, 1024]).
size mismatch for roi_head.bbox_head.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([9]).
size mismatch for roi_head.bbox_head.fc_reg.weight: copying a param with shape torch.Size([320, 1024]) from checkpoint, the shape in current model is torch.Size([32, 1024]).
size mismatch for roi_head.bbox_head.fc_reg.bias: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([32]).
2022-09-13 18:58:21,493 - mmdet - INFO - Start running, host: hhn@cv-8k3090, work_dir: /home/hhn/mmdetection/work_dirs/faster_rcnn_r50_fpn
2022-09-13 18:58:21,494 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2022-09-13 18:58:21,494 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2022-09-13 18:58:21,494 - mmdet - INFO - Checkpoints will be saved to /home/hhn/mmdetection/work_dirs/faster_rcnn_r50_fpn by HardDiskBackend.
2022-09-13 18:58:52,622 - mmdet - INFO - Epoch [1][50/231]	lr: 1.978e-03, eta: 0:28:05, time: 0.619, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0776, loss_rpn_bbox: 0.0265, loss_cls: 0.5492, acc: 87.9824, loss_bbox: 0.1529, loss: 0.8061
2022-09-13 18:59:21,431 - mmdet - INFO - Epoch [1][100/231]	lr: 3.976e-03, eta: 0:26:36, time: 0.576, data_time: 0.021, memory: 9927, loss_rpn_cls: 0.0214, loss_rpn_bbox: 0.0293, loss_cls: 0.2019, acc: 94.5391, loss_bbox: 0.2092, loss: 0.4618
2022-09-13 18:59:50,129 - mmdet - INFO - Epoch [1][150/231]	lr: 5.974e-03, eta: 0:25:46, time: 0.574, data_time: 0.020, memory: 9927, loss_rpn_cls: 0.0130, loss_rpn_bbox: 0.0275, loss_cls: 0.1780, acc: 94.4062, loss_bbox: 0.1918, loss: 0.4104
2022-09-13 19:00:19,019 - mmdet - INFO - Epoch [1][200/231]	lr: 7.972e-03, eta: 0:25:09, time: 0.578, data_time: 0.021, memory: 9927, loss_rpn_cls: 0.0114, loss_rpn_bbox: 0.0268, loss_cls: 0.1584, acc: 95.0889, loss_bbox: 0.1602, loss: 0.3568
2022-09-13 19:00:36,587 - mmdet - INFO - Saving checkpoint at 1 epochs
2022-09-13 19:01:00,441 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:01:01,155 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.159
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.289
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.158
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.109
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.061
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.194
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.258
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.258
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.258
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.158
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.098
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.377

2022-09-13 19:01:01,156 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.115 | liewen   | 0.097 | huahen   | 0.242 |
| baidian  | 0.082 | bengque  | 0.021 | zifu     | 0.719 |
| wuzi     | 0.000 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:01:01,166 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:01:01,167 - mmdet - INFO - Epoch(val) [1][288]	bbox_mAP: 0.1590, bbox_mAP_50: 0.2890, bbox_mAP_75: 0.1580, bbox_mAP_s: 0.1090, bbox_mAP_m: 0.0610, bbox_mAP_l: 0.1940, bbox_mAP_copypaste: 0.159 0.289 0.158 0.109 0.061 0.194
2022-09-13 19:01:32,106 - mmdet - INFO - Epoch [2][50/231]	lr: 1.121e-02, eta: 0:21:52, time: 0.615, data_time: 0.064, memory: 9927, loss_rpn_cls: 0.0154, loss_rpn_bbox: 0.0280, loss_cls: 0.1439, acc: 95.4297, loss_bbox: 0.1507, loss: 0.3380
2022-09-13 19:02:01,071 - mmdet - INFO - Epoch [2][100/231]	lr: 1.321e-02, eta: 0:21:45, time: 0.579, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0178, loss_rpn_bbox: 0.0257, loss_cls: 0.1488, acc: 95.2549, loss_bbox: 0.1466, loss: 0.3388
2022-09-13 19:02:30,082 - mmdet - INFO - Epoch [2][150/231]	lr: 1.520e-02, eta: 0:21:33, time: 0.580, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0128, loss_rpn_bbox: 0.0289, loss_cls: 0.1505, acc: 95.2012, loss_bbox: 0.1548, loss: 0.3471
2022-09-13 19:02:58,803 - mmdet - INFO - Epoch [2][200/231]	lr: 1.720e-02, eta: 0:21:15, time: 0.574, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0099, loss_rpn_bbox: 0.0291, loss_cls: 0.1355, acc: 95.5322, loss_bbox: 0.1386, loss: 0.3131
2022-09-13 19:03:16,465 - mmdet - INFO - Saving checkpoint at 2 epochs
2022-09-13 19:03:40,438 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:03:41,157 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.166
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.354
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.152
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.065
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.098
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.203
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.307
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.307
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.307
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.131
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.252
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.457

2022-09-13 19:03:41,158 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.201 | liewen   | 0.127 | huahen   | 0.177 |
| baidian  | 0.154 | bengque  | 0.050 | zifu     | 0.621 |
| wuzi     | 0.000 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:03:41,169 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:03:41,169 - mmdet - INFO - Epoch(val) [2][288]	bbox_mAP: 0.1660, bbox_mAP_50: 0.3540, bbox_mAP_75: 0.1520, bbox_mAP_s: 0.0650, bbox_mAP_m: 0.0980, bbox_mAP_l: 0.2030, bbox_mAP_copypaste: 0.166 0.354 0.152 0.065 0.098 0.203
2022-09-13 19:04:12,485 - mmdet - INFO - Epoch [3][50/231]	lr: 2.000e-02, eta: 0:19:33, time: 0.623, data_time: 0.064, memory: 9927, loss_rpn_cls: 0.0131, loss_rpn_bbox: 0.0296, loss_cls: 0.1402, acc: 95.3896, loss_bbox: 0.1443, loss: 0.3272
2022-09-13 19:04:41,175 - mmdet - INFO - Epoch [3][100/231]	lr: 2.000e-02, eta: 0:19:18, time: 0.574, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0196, loss_rpn_bbox: 0.0294, loss_cls: 0.1306, acc: 95.8145, loss_bbox: 0.1352, loss: 0.3149
2022-09-13 19:05:09,991 - mmdet - INFO - Epoch [3][150/231]	lr: 2.000e-02, eta: 0:19:01, time: 0.576, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0124, loss_rpn_bbox: 0.0278, loss_cls: 0.1353, acc: 95.3701, loss_bbox: 0.1496, loss: 0.3251
2022-09-13 19:05:38,997 - mmdet - INFO - Epoch [3][200/231]	lr: 2.000e-02, eta: 0:18:43, time: 0.580, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0186, loss_rpn_bbox: 0.0266, loss_cls: 0.1231, acc: 96.0811, loss_bbox: 0.1280, loss: 0.2962
2022-09-13 19:05:56,681 - mmdet - INFO - Saving checkpoint at 3 epochs
2022-09-13 19:06:20,931 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:06:21,446 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.177
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.355
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.150
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.199
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.122
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.192
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.293
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.293
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.293
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.255
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.228
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.321

2022-09-13 19:06:21,447 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.202 | liewen   | 0.126 | huahen   | 0.146 |
| baidian  | 0.207 | bengque  | 0.049 | zifu     | 0.690 |
| wuzi     | 0.000 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:06:21,456 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:06:21,457 - mmdet - INFO - Epoch(val) [3][288]	bbox_mAP: 0.1770, bbox_mAP_50: 0.3550, bbox_mAP_75: 0.1500, bbox_mAP_s: 0.1990, bbox_mAP_m: 0.1220, bbox_mAP_l: 0.1920, bbox_mAP_copypaste: 0.177 0.355 0.150 0.199 0.122 0.192
2022-09-13 19:06:52,759 - mmdet - INFO - Epoch [4][50/231]	lr: 2.000e-02, eta: 0:17:27, time: 0.622, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0135, loss_rpn_bbox: 0.0291, loss_cls: 0.1290, acc: 95.3711, loss_bbox: 0.1499, loss: 0.3215
2022-09-13 19:07:21,911 - mmdet - INFO - Epoch [4][100/231]	lr: 2.000e-02, eta: 0:17:09, time: 0.583, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0100, loss_rpn_bbox: 0.0264, loss_cls: 0.1280, acc: 95.5771, loss_bbox: 0.1365, loss: 0.3009
2022-09-13 19:07:50,665 - mmdet - INFO - Epoch [4][150/231]	lr: 2.000e-02, eta: 0:16:50, time: 0.575, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0139, loss_rpn_bbox: 0.0221, loss_cls: 0.1103, acc: 96.2959, loss_bbox: 0.1190, loss: 0.2654
2022-09-13 19:08:19,596 - mmdet - INFO - Epoch [4][200/231]	lr: 2.000e-02, eta: 0:16:29, time: 0.579, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0124, loss_rpn_bbox: 0.0285, loss_cls: 0.1186, acc: 95.8760, loss_bbox: 0.1333, loss: 0.2927
2022-09-13 19:08:37,383 - mmdet - INFO - Saving checkpoint at 4 epochs
2022-09-13 19:09:02,086 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:09:02,795 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.185
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.414
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.131
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.188
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.136
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.186
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.326
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.326
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.326
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.369
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.275
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.353

2022-09-13 19:09:02,796 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.179 | liewen   | 0.171 | huahen   | 0.237 |
| baidian  | 0.224 | bengque  | 0.114 | zifu     | 0.554 |
| wuzi     | 0.000 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:09:02,809 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:09:02,809 - mmdet - INFO - Epoch(val) [4][288]	bbox_mAP: 0.1850, bbox_mAP_50: 0.4140, bbox_mAP_75: 0.1310, bbox_mAP_s: 0.1880, bbox_mAP_m: 0.1360, bbox_mAP_l: 0.1860, bbox_mAP_copypaste: 0.185 0.414 0.131 0.188 0.136 0.186
2022-09-13 19:09:34,011 - mmdet - INFO - Epoch [5][50/231]	lr: 2.000e-02, eta: 0:15:25, time: 0.620, data_time: 0.065, memory: 9927, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0241, loss_cls: 0.1225, acc: 95.5791, loss_bbox: 0.1472, loss: 0.3008
2022-09-13 19:10:03,076 - mmdet - INFO - Epoch [5][100/231]	lr: 2.000e-02, eta: 0:15:05, time: 0.581, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0067, loss_rpn_bbox: 0.0249, loss_cls: 0.1119, acc: 95.8721, loss_bbox: 0.1409, loss: 0.2843
2022-09-13 19:10:31,635 - mmdet - INFO - Epoch [5][150/231]	lr: 2.000e-02, eta: 0:14:43, time: 0.571, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0084, loss_rpn_bbox: 0.0247, loss_cls: 0.1186, acc: 95.6719, loss_bbox: 0.1474, loss: 0.2991
2022-09-13 19:11:00,323 - mmdet - INFO - Epoch [5][200/231]	lr: 2.000e-02, eta: 0:14:21, time: 0.574, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0247, loss_cls: 0.1161, acc: 95.9512, loss_bbox: 0.1318, loss: 0.2813
2022-09-13 19:11:18,028 - mmdet - INFO - Saving checkpoint at 5 epochs
2022-09-13 19:11:41,270 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:11:41,798 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.204
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.414
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.170
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.146
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.132
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.210
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.213
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.249
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.361

2022-09-13 19:11:41,799 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.206 | liewen   | 0.176 | huahen   | 0.218 |
| baidian  | 0.239 | bengque  | 0.060 | zifu     | 0.735 |
| wuzi     | 0.000 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:11:41,805 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:11:41,805 - mmdet - INFO - Epoch(val) [5][288]	bbox_mAP: 0.2040, bbox_mAP_50: 0.4140, bbox_mAP_75: 0.1700, bbox_mAP_s: 0.1460, bbox_mAP_m: 0.1320, bbox_mAP_l: 0.2100, bbox_mAP_copypaste: 0.204 0.414 0.170 0.146 0.132 0.210
2022-09-13 19:12:12,860 - mmdet - INFO - Epoch [6][50/231]	lr: 2.000e-02, eta: 0:13:24, time: 0.617, data_time: 0.064, memory: 9927, loss_rpn_cls: 0.0087, loss_rpn_bbox: 0.0269, loss_cls: 0.1139, acc: 95.6660, loss_bbox: 0.1461, loss: 0.2956
2022-09-13 19:12:41,235 - mmdet - INFO - Epoch [6][100/231]	lr: 2.000e-02, eta: 0:13:02, time: 0.567, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0059, loss_rpn_bbox: 0.0239, loss_cls: 0.1042, acc: 96.1221, loss_bbox: 0.1255, loss: 0.2596
2022-09-13 19:13:09,885 - mmdet - INFO - Epoch [6][150/231]	lr: 2.000e-02, eta: 0:12:39, time: 0.573, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0089, loss_rpn_bbox: 0.0212, loss_cls: 0.1094, acc: 95.8564, loss_bbox: 0.1431, loss: 0.2825
2022-09-13 19:13:38,420 - mmdet - INFO - Epoch [6][200/231]	lr: 2.000e-02, eta: 0:12:16, time: 0.571, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0260, loss_cls: 0.1357, acc: 95.5186, loss_bbox: 0.1395, loss: 0.3098
2022-09-13 19:13:56,114 - mmdet - INFO - Saving checkpoint at 6 epochs
2022-09-13 19:14:19,128 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:14:19,733 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.221
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.468
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.182
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.236
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.143
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.236
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.383
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.383
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.383
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.367
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.306
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.400

2022-09-13 19:14:19,736 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.182 | liewen   | 0.174 | huahen   | 0.299 |
| baidian  | 0.218 | bengque  | 0.167 | zifu     | 0.720 |
| wuzi     | 0.010 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:14:19,755 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:14:19,755 - mmdet - INFO - Epoch(val) [6][288]	bbox_mAP: 0.2210, bbox_mAP_50: 0.4680, bbox_mAP_75: 0.1820, bbox_mAP_s: 0.2360, bbox_mAP_m: 0.1430, bbox_mAP_l: 0.2360, bbox_mAP_copypaste: 0.221 0.468 0.182 0.236 0.143 0.236
2022-09-13 19:14:50,755 - mmdet - INFO - Epoch [7][50/231]	lr: 2.000e-02, eta: 0:11:23, time: 0.616, data_time: 0.067, memory: 9927, loss_rpn_cls: 0.0051, loss_rpn_bbox: 0.0253, loss_cls: 0.1098, acc: 95.9209, loss_bbox: 0.1406, loss: 0.2808
2022-09-13 19:15:19,550 - mmdet - INFO - Epoch [7][100/231]	lr: 2.000e-02, eta: 0:11:00, time: 0.576, data_time: 0.020, memory: 9927, loss_rpn_cls: 0.0062, loss_rpn_bbox: 0.0246, loss_cls: 0.1159, acc: 95.7256, loss_bbox: 0.1470, loss: 0.2938
2022-09-13 19:15:48,223 - mmdet - INFO - Epoch [7][150/231]	lr: 2.000e-02, eta: 0:10:37, time: 0.573, data_time: 0.020, memory: 9927, loss_rpn_cls: 0.0054, loss_rpn_bbox: 0.0228, loss_cls: 0.0985, acc: 96.2344, loss_bbox: 0.1308, loss: 0.2574
2022-09-13 19:16:17,386 - mmdet - INFO - Epoch [7][200/231]	lr: 2.000e-02, eta: 0:10:14, time: 0.583, data_time: 0.024, memory: 9927, loss_rpn_cls: 0.0060, loss_rpn_bbox: 0.0238, loss_cls: 0.1102, acc: 95.8018, loss_bbox: 0.1408, loss: 0.2809
2022-09-13 19:16:35,024 - mmdet - INFO - Saving checkpoint at 7 epochs
2022-09-13 19:16:58,139 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:16:58,818 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.228
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.458
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.193
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.208
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.156
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.266
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.360
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.360
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.360
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.270
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.254
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.592

2022-09-13 19:16:58,819 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.240 | liewen   | 0.154 | huahen   | 0.255 |
| baidian  | 0.231 | bengque  | 0.217 | zifu     | 0.729 |
| wuzi     | 0.000 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:16:58,837 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:16:58,837 - mmdet - INFO - Epoch(val) [7][288]	bbox_mAP: 0.2280, bbox_mAP_50: 0.4580, bbox_mAP_75: 0.1930, bbox_mAP_s: 0.2080, bbox_mAP_m: 0.1560, bbox_mAP_l: 0.2660, bbox_mAP_copypaste: 0.228 0.458 0.193 0.208 0.156 0.266
2022-09-13 19:17:29,665 - mmdet - INFO - Epoch [8][50/231]	lr: 2.000e-02, eta: 0:09:24, time: 0.613, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0233, loss_cls: 0.0987, acc: 96.2217, loss_bbox: 0.1374, loss: 0.2639
2022-09-13 19:17:58,138 - mmdet - INFO - Epoch [8][100/231]	lr: 2.000e-02, eta: 0:09:01, time: 0.569, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0185, loss_cls: 0.0960, acc: 96.5039, loss_bbox: 0.1294, loss: 0.2489
2022-09-13 19:18:26,578 - mmdet - INFO - Epoch [8][150/231]	lr: 2.000e-02, eta: 0:08:37, time: 0.569, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0055, loss_rpn_bbox: 0.0270, loss_cls: 0.1051, acc: 95.8945, loss_bbox: 0.1480, loss: 0.2855
2022-09-13 19:18:55,225 - mmdet - INFO - Epoch [8][200/231]	lr: 2.000e-02, eta: 0:08:12, time: 0.573, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0222, loss_cls: 0.1061, acc: 96.0244, loss_bbox: 0.1371, loss: 0.2704
2022-09-13 19:19:12,930 - mmdet - INFO - Saving checkpoint at 8 epochs
2022-09-13 19:19:37,634 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:19:38,131 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.273
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.506
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.254
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.195
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.222
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.275
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.492
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.492
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.492
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.352
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.464
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.436

2022-09-13 19:19:38,132 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.259 | liewen   | 0.199 | huahen   | 0.304 |
| baidian  | 0.245 | bengque  | 0.202 | zifu     | 0.789 |
| wuzi     | 0.009 | louguang | 0.182 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:19:38,142 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:19:38,142 - mmdet - INFO - Epoch(val) [8][288]	bbox_mAP: 0.2730, bbox_mAP_50: 0.5060, bbox_mAP_75: 0.2540, bbox_mAP_s: 0.1950, bbox_mAP_m: 0.2220, bbox_mAP_l: 0.2750, bbox_mAP_copypaste: 0.273 0.506 0.254 0.195 0.222 0.275
2022-09-13 19:20:09,339 - mmdet - INFO - Epoch [9][50/231]	lr: 2.000e-03, eta: 0:07:26, time: 0.620, data_time: 0.066, memory: 9927, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0203, loss_cls: 0.0871, acc: 96.5391, loss_bbox: 0.1258, loss: 0.2368
2022-09-13 19:20:38,029 - mmdet - INFO - Epoch [9][100/231]	lr: 2.000e-03, eta: 0:07:01, time: 0.574, data_time: 0.021, memory: 9927, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0220, loss_cls: 0.0786, acc: 96.8926, loss_bbox: 0.1259, loss: 0.2297
2022-09-13 19:21:06,624 - mmdet - INFO - Epoch [9][150/231]	lr: 2.000e-03, eta: 0:06:37, time: 0.572, data_time: 0.021, memory: 9927, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0159, loss_cls: 0.0762, acc: 96.9795, loss_bbox: 0.1188, loss: 0.2146
2022-09-13 19:21:35,154 - mmdet - INFO - Epoch [9][200/231]	lr: 2.000e-03, eta: 0:06:12, time: 0.571, data_time: 0.021, memory: 9927, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0216, loss_cls: 0.0796, acc: 96.7197, loss_bbox: 0.1244, loss: 0.2292
2022-09-13 19:21:53,085 - mmdet - INFO - Saving checkpoint at 9 epochs
2022-09-13 19:22:16,935 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:22:17,305 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.277
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.515
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.248
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.215
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.212
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.309
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.408
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.408
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.408
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.352
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.345
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.463

2022-09-13 19:22:17,305 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.309 | liewen   | 0.254 | huahen   | 0.330 |
| baidian  | 0.275 | bengque  | 0.276 | zifu     | 0.769 |
| wuzi     | 0.005 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:22:17,310 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:22:17,310 - mmdet - INFO - Epoch(val) [9][288]	bbox_mAP: 0.2770, bbox_mAP_50: 0.5150, bbox_mAP_75: 0.2480, bbox_mAP_s: 0.2150, bbox_mAP_m: 0.2120, bbox_mAP_l: 0.3090, bbox_mAP_copypaste: 0.277 0.515 0.248 0.215 0.212 0.309
2022-09-13 19:22:48,765 - mmdet - INFO - Epoch [10][50/231]	lr: 2.000e-03, eta: 0:05:27, time: 0.625, data_time: 0.067, memory: 9927, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0154, loss_cls: 0.0668, acc: 97.2939, loss_bbox: 0.1141, loss: 0.1991
2022-09-13 19:23:17,776 - mmdet - INFO - Epoch [10][100/231]	lr: 2.000e-03, eta: 0:05:03, time: 0.580, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0178, loss_cls: 0.0812, acc: 96.7559, loss_bbox: 0.1255, loss: 0.2275
2022-09-13 19:23:46,487 - mmdet - INFO - Epoch [10][150/231]	lr: 2.000e-03, eta: 0:04:38, time: 0.574, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0173, loss_cls: 0.0808, acc: 96.8115, loss_bbox: 0.1303, loss: 0.2317
2022-09-13 19:24:14,996 - mmdet - INFO - Epoch [10][200/231]	lr: 2.000e-03, eta: 0:04:13, time: 0.570, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0188, loss_cls: 0.0719, acc: 97.0576, loss_bbox: 0.1147, loss: 0.2086
2022-09-13 19:24:32,788 - mmdet - INFO - Saving checkpoint at 10 epochs
2022-09-13 19:24:56,703 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:24:57,190 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.275
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.522
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.249
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.207
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.204
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.314
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.439
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.439
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.439
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.364
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.356
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.468

2022-09-13 19:24:57,190 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.273 | liewen   | 0.240 | huahen   | 0.339 |
| baidian  | 0.262 | bengque  | 0.301 | zifu     | 0.769 |
| wuzi     | 0.016 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:24:57,194 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:24:57,194 - mmdet - INFO - Epoch(val) [10][288]	bbox_mAP: 0.2750, bbox_mAP_50: 0.5220, bbox_mAP_75: 0.2490, bbox_mAP_s: 0.2070, bbox_mAP_m: 0.2040, bbox_mAP_l: 0.3140, bbox_mAP_copypaste: 0.275 0.522 0.249 0.207 0.204 0.314
2022-09-13 19:25:28,327 - mmdet - INFO - Epoch [11][50/231]	lr: 2.000e-03, eta: 0:03:30, time: 0.619, data_time: 0.064, memory: 9927, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0179, loss_cls: 0.0680, acc: 97.2148, loss_bbox: 0.1127, loss: 0.2013
2022-09-13 19:25:56,967 - mmdet - INFO - Epoch [11][100/231]	lr: 2.000e-03, eta: 0:03:05, time: 0.573, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0161, loss_cls: 0.0706, acc: 97.1787, loss_bbox: 0.1115, loss: 0.2001
2022-09-13 19:26:25,810 - mmdet - INFO - Epoch [11][150/231]	lr: 2.000e-03, eta: 0:02:39, time: 0.577, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0172, loss_cls: 0.0714, acc: 97.0215, loss_bbox: 0.1157, loss: 0.2069
2022-09-13 19:26:54,490 - mmdet - INFO - Epoch [11][200/231]	lr: 2.000e-03, eta: 0:02:14, time: 0.574, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0184, loss_cls: 0.0768, acc: 96.9355, loss_bbox: 0.1258, loss: 0.2232
2022-09-13 19:27:12,173 - mmdet - INFO - Saving checkpoint at 11 epochs
2022-09-13 19:27:35,745 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:27:36,113 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.296
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.555
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.268
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.216
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.222
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.316
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.467
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.467
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.467
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.412
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.390
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.468

2022-09-13 19:27:36,113 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.258 | liewen   | 0.254 | huahen   | 0.354 |
| baidian  | 0.265 | bengque  | 0.273 | zifu     | 0.791 |
| wuzi     | 0.020 | louguang | 0.151 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:27:36,119 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:27:36,119 - mmdet - INFO - Epoch(val) [11][288]	bbox_mAP: 0.2960, bbox_mAP_50: 0.5550, bbox_mAP_75: 0.2680, bbox_mAP_s: 0.2160, bbox_mAP_m: 0.2220, bbox_mAP_l: 0.3160, bbox_mAP_copypaste: 0.296 0.555 0.268 0.216 0.222 0.316
2022-09-13 19:28:07,211 - mmdet - INFO - Epoch [12][50/231]	lr: 2.000e-04, eta: 0:01:32, time: 0.618, data_time: 0.065, memory: 9927, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0202, loss_cls: 0.0712, acc: 97.0283, loss_bbox: 0.1205, loss: 0.2147
2022-09-13 19:28:35,839 - mmdet - INFO - Epoch [12][100/231]	lr: 2.000e-04, eta: 0:01:06, time: 0.573, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0152, loss_cls: 0.0646, acc: 97.4277, loss_bbox: 0.1088, loss: 0.1913
2022-09-13 19:29:04,524 - mmdet - INFO - Epoch [12][150/231]	lr: 2.000e-04, eta: 0:00:41, time: 0.574, data_time: 0.016, memory: 9927, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0169, loss_cls: 0.0727, acc: 97.1904, loss_bbox: 0.1129, loss: 0.2049
2022-09-13 19:29:33,100 - mmdet - INFO - Epoch [12][200/231]	lr: 2.000e-04, eta: 0:00:15, time: 0.571, data_time: 0.016, memory: 9927, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0166, loss_cls: 0.0704, acc: 97.0850, loss_bbox: 0.1131, loss: 0.2024
2022-09-13 19:29:50,791 - mmdet - INFO - Saving checkpoint at 12 epochs
2022-09-13 19:30:13,335 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:30:13,730 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.295
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.554
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.260
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.210
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.221
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.312
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.474
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.474
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.474
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.364
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.387
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.485

2022-09-13 19:30:13,731 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.277 | liewen   | 0.250 | huahen   | 0.347 |
| baidian  | 0.268 | bengque  | 0.264 | zifu     | 0.782 |
| wuzi     | 0.019 | louguang | 0.151 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:30:13,736 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:30:13,736 - mmdet - INFO - Epoch(val) [12][288]	bbox_mAP: 0.2950, bbox_mAP_50: 0.5540, bbox_mAP_75: 0.2600, bbox_mAP_s: 0.2100, bbox_mAP_m: 0.2210, bbox_mAP_l: 0.3120, bbox_mAP_copypaste: 0.295 0.554 0.260 0.210 0.221 0.312
