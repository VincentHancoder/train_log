2022-09-13 19:30:55,655 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.7 (default, May  7 2020, 21:25:33) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: GeForce RTX 3090
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.0, V11.0.194
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.7.0+cu110
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80
  - CuDNN 8.0.4
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.1+cu110
OpenCV: 4.6.0
MMCV: 1.6.1
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.25.1+df28da9
------------------------------------------------------------

2022-09-13 19:30:56,019 - mmdet - INFO - Distributed training: False
2022-09-13 19:30:56,345 - mmdet - INFO - Config:
dataset_type = 'CocoDataset'
data_root = '/home/hhn/mmdetection/20220830'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1500, 1000), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1500, 1000),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/train4.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1500, 1000), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/val4.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1500, 1000),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/val4.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1500, 1000),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=12)
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/hhn/mmdetection/pretrained/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=8)
model = dict(
    type='FasterRCNN',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=None),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=8,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
work_dir = './work_dirs/faster_rcnn_r50_fpn'
auto_resume = False
gpu_ids = [0]

2022-09-13 19:30:56,346 - mmdet - INFO - Set random seed to 148463061, deterministic: False
2022-09-13 19:30:56,741 - mmdet - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': 'Conv2d'}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2022-09-13 19:30:57,069 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,071 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,074 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,077 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,079 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,081 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,083 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,090 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,093 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,095 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,099 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,102 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,105 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,123 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,127 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,131 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 19:30:57,154 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2022-09-13 19:30:57,180 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2022-09-13 19:30:57,195 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([9, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([9]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([32, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([32]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2022-09-13 19:31:00,293 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2022-09-13 19:31:00,303 - mmdet - INFO - load checkpoint from local path: /home/hhn/mmdetection/pretrained/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth
2022-09-13 19:31:00,428 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for roi_head.bbox_head.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([9, 1024]).
size mismatch for roi_head.bbox_head.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([9]).
size mismatch for roi_head.bbox_head.fc_reg.weight: copying a param with shape torch.Size([320, 1024]) from checkpoint, the shape in current model is torch.Size([32, 1024]).
size mismatch for roi_head.bbox_head.fc_reg.bias: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([32]).
2022-09-13 19:31:00,431 - mmdet - INFO - Start running, host: hhn@cv-8k3090, work_dir: /home/hhn/mmdetection/work_dirs/faster_rcnn_r50_fpn
2022-09-13 19:31:00,431 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2022-09-13 19:31:00,431 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2022-09-13 19:31:00,432 - mmdet - INFO - Checkpoints will be saved to /home/hhn/mmdetection/work_dirs/faster_rcnn_r50_fpn by HardDiskBackend.
2022-09-13 19:31:31,590 - mmdet - INFO - Epoch [1][50/232]	lr: 1.978e-03, eta: 0:28:14, time: 0.620, data_time: 0.060, memory: 9926, loss_rpn_cls: 0.0796, loss_rpn_bbox: 0.0318, loss_cls: 0.5562, acc: 87.4619, loss_bbox: 0.1406, loss: 0.8083
2022-09-13 19:32:00,470 - mmdet - INFO - Epoch [1][100/232]	lr: 3.976e-03, eta: 0:26:46, time: 0.578, data_time: 0.015, memory: 9927, loss_rpn_cls: 0.0141, loss_rpn_bbox: 0.0284, loss_cls: 0.2154, acc: 94.2080, loss_bbox: 0.2202, loss: 0.4782
2022-09-13 19:32:29,327 - mmdet - INFO - Epoch [1][150/232]	lr: 5.974e-03, eta: 0:25:57, time: 0.577, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0099, loss_rpn_bbox: 0.0299, loss_cls: 0.1908, acc: 94.0527, loss_bbox: 0.2074, loss: 0.4380
2022-09-13 19:32:58,088 - mmdet - INFO - Epoch [1][200/232]	lr: 7.972e-03, eta: 0:25:17, time: 0.575, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0133, loss_rpn_bbox: 0.0246, loss_cls: 0.1519, acc: 95.1045, loss_bbox: 0.1569, loss: 0.3466
2022-09-13 19:33:16,328 - mmdet - INFO - Saving checkpoint at 1 epochs
2022-09-13 19:33:41,302 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:33:42,150 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.146
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.345
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.105
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.081
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.125
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.119
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.353
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.353
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.353
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.166
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.308

2022-09-13 19:33:42,151 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.057 | liewen   | 0.099 | huahen   | 0.186 |
| baidian  | 0.200 | bengque  | 0.002 | zifu     | 0.416 |
| wuzi     | 0.062 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:33:42,167 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:33:42,167 - mmdet - INFO - Epoch(val) [1][288]	bbox_mAP: 0.1460, bbox_mAP_50: 0.3450, bbox_mAP_75: 0.1050, bbox_mAP_s: 0.0810, bbox_mAP_m: 0.1250, bbox_mAP_l: 0.1190, bbox_mAP_copypaste: 0.146 0.345 0.105 0.081 0.125 0.119
2022-09-13 19:34:13,151 - mmdet - INFO - Epoch [2][50/232]	lr: 1.125e-02, eta: 0:21:55, time: 0.616, data_time: 0.061, memory: 9927, loss_rpn_cls: 0.0115, loss_rpn_bbox: 0.0285, loss_cls: 0.1485, acc: 95.1543, loss_bbox: 0.1622, loss: 0.3508
2022-09-13 19:34:41,957 - mmdet - INFO - Epoch [2][100/232]	lr: 1.325e-02, eta: 0:21:47, time: 0.576, data_time: 0.016, memory: 9927, loss_rpn_cls: 0.0096, loss_rpn_bbox: 0.0267, loss_cls: 0.1677, acc: 94.5742, loss_bbox: 0.1628, loss: 0.3668
2022-09-13 19:35:10,728 - mmdet - INFO - Epoch [2][150/232]	lr: 1.524e-02, eta: 0:21:34, time: 0.575, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0245, loss_rpn_bbox: 0.0267, loss_cls: 0.1281, acc: 96.0029, loss_bbox: 0.1315, loss: 0.3107
2022-09-13 19:35:39,908 - mmdet - INFO - Epoch [2][200/232]	lr: 1.724e-02, eta: 0:21:19, time: 0.584, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0202, loss_rpn_bbox: 0.0277, loss_cls: 0.1295, acc: 95.6787, loss_bbox: 0.1377, loss: 0.3152
2022-09-13 19:35:58,333 - mmdet - INFO - Saving checkpoint at 2 epochs
2022-09-13 19:36:22,878 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:36:23,474 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.151
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.319
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.127
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.129
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.138
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.111
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.335
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.335
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.335
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.323
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.290
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.257

2022-09-13 19:36:23,475 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.012 | liewen   | 0.120 | huahen   | 0.197 |
| baidian  | 0.196 | bengque  | 0.032 | zifu     | 0.500 |
| wuzi     | 0.000 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:36:23,489 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:36:23,489 - mmdet - INFO - Epoch(val) [2][288]	bbox_mAP: 0.1510, bbox_mAP_50: 0.3190, bbox_mAP_75: 0.1270, bbox_mAP_s: 0.1290, bbox_mAP_m: 0.1380, bbox_mAP_l: 0.1110, bbox_mAP_copypaste: 0.151 0.319 0.127 0.129 0.138 0.111
2022-09-13 19:36:54,710 - mmdet - INFO - Epoch [3][50/232]	lr: 2.000e-02, eta: 0:19:35, time: 0.621, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0135, loss_rpn_bbox: 0.0297, loss_cls: 0.1220, acc: 95.9072, loss_bbox: 0.1517, loss: 0.3169
2022-09-13 19:37:23,798 - mmdet - INFO - Epoch [3][100/232]	lr: 2.000e-02, eta: 0:19:21, time: 0.582, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0109, loss_rpn_bbox: 0.0307, loss_cls: 0.1332, acc: 95.5518, loss_bbox: 0.1448, loss: 0.3196
2022-09-13 19:37:53,263 - mmdet - INFO - Epoch [3][150/232]	lr: 2.000e-02, eta: 0:19:07, time: 0.589, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0119, loss_rpn_bbox: 0.0279, loss_cls: 0.1426, acc: 95.3105, loss_bbox: 0.1408, loss: 0.3231
2022-09-13 19:38:22,034 - mmdet - INFO - Epoch [3][200/232]	lr: 2.000e-02, eta: 0:18:48, time: 0.575, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0134, loss_rpn_bbox: 0.0259, loss_cls: 0.1410, acc: 95.2861, loss_bbox: 0.1483, loss: 0.3286
2022-09-13 19:38:40,578 - mmdet - INFO - Saving checkpoint at 3 epochs
2022-09-13 19:39:03,668 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:39:04,501 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.252
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.475
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.257
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.150
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.182
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.233
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.437
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.437
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.437
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.260
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.389
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.358

2022-09-13 19:39:04,502 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.340 | liewen   | 0.131 | huahen   | 0.291 |
| baidian  | 0.215 | bengque  | 0.108 | zifu     | 0.680 |
| wuzi     | 0.000 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:39:04,512 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:39:04,512 - mmdet - INFO - Epoch(val) [3][288]	bbox_mAP: 0.2520, bbox_mAP_50: 0.4750, bbox_mAP_75: 0.2570, bbox_mAP_s: 0.1500, bbox_mAP_m: 0.1820, bbox_mAP_l: 0.2330, bbox_mAP_copypaste: 0.252 0.475 0.257 0.150 0.182 0.233
2022-09-13 19:39:35,936 - mmdet - INFO - Epoch [4][50/232]	lr: 2.000e-02, eta: 0:17:30, time: 0.625, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0283, loss_cls: 0.1310, acc: 95.3652, loss_bbox: 0.1493, loss: 0.3168
2022-09-13 19:40:04,551 - mmdet - INFO - Epoch [4][100/232]	lr: 2.000e-02, eta: 0:17:12, time: 0.572, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0249, loss_cls: 0.1179, acc: 95.8818, loss_bbox: 0.1370, loss: 0.2884
2022-09-13 19:40:33,281 - mmdet - INFO - Epoch [4][150/232]	lr: 2.000e-02, eta: 0:16:52, time: 0.575, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0271, loss_cls: 0.1276, acc: 95.2783, loss_bbox: 0.1480, loss: 0.3106
2022-09-13 19:41:01,997 - mmdet - INFO - Epoch [4][200/232]	lr: 2.000e-02, eta: 0:16:31, time: 0.574, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0224, loss_cls: 0.1190, acc: 95.9150, loss_bbox: 0.1365, loss: 0.2862
2022-09-13 19:41:20,385 - mmdet - INFO - Saving checkpoint at 4 epochs
2022-09-13 19:41:42,466 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:41:42,920 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.233
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.505
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.215
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.180
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.226
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.224
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.409
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.409
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.409
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.402
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.366
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.356

2022-09-13 19:41:42,921 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.138 | liewen   | 0.151 | huahen   | 0.287 |
| baidian  | 0.220 | bengque  | 0.186 | zifu     | 0.620 |
| wuzi     | 0.026 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:41:42,927 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:41:42,927 - mmdet - INFO - Epoch(val) [4][288]	bbox_mAP: 0.2330, bbox_mAP_50: 0.5050, bbox_mAP_75: 0.2150, bbox_mAP_s: 0.1800, bbox_mAP_m: 0.2260, bbox_mAP_l: 0.2240, bbox_mAP_copypaste: 0.233 0.505 0.215 0.180 0.226 0.224
2022-09-13 19:42:13,881 - mmdet - INFO - Epoch [5][50/232]	lr: 2.000e-02, eta: 0:15:26, time: 0.615, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0057, loss_rpn_bbox: 0.0270, loss_cls: 0.1156, acc: 95.7939, loss_bbox: 0.1418, loss: 0.2901
2022-09-13 19:42:42,216 - mmdet - INFO - Epoch [5][100/232]	lr: 2.000e-02, eta: 0:15:04, time: 0.567, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0099, loss_rpn_bbox: 0.0270, loss_cls: 0.1229, acc: 95.5938, loss_bbox: 0.1471, loss: 0.3069
2022-09-13 19:43:10,589 - mmdet - INFO - Epoch [5][150/232]	lr: 2.000e-02, eta: 0:14:43, time: 0.567, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0061, loss_rpn_bbox: 0.0254, loss_cls: 0.1059, acc: 96.1230, loss_bbox: 0.1283, loss: 0.2657
2022-09-13 19:43:39,180 - mmdet - INFO - Epoch [5][200/232]	lr: 2.000e-02, eta: 0:14:21, time: 0.572, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0087, loss_rpn_bbox: 0.0239, loss_cls: 0.1259, acc: 95.6416, loss_bbox: 0.1431, loss: 0.3015
2022-09-13 19:43:57,509 - mmdet - INFO - Saving checkpoint at 5 epochs
2022-09-13 19:44:19,675 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:44:20,210 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.270
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.499
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.239
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.265
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.223
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.235
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.436
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.436
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.436
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.406
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.348
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.395

2022-09-13 19:44:20,210 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.417 | liewen   | 0.178 | huahen   | 0.273 |
| baidian  | 0.192 | bengque  | 0.120 | zifu     | 0.702 |
| wuzi     | 0.010 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:44:20,219 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:44:20,219 - mmdet - INFO - Epoch(val) [5][288]	bbox_mAP: 0.2700, bbox_mAP_50: 0.4990, bbox_mAP_75: 0.2390, bbox_mAP_s: 0.2650, bbox_mAP_m: 0.2230, bbox_mAP_l: 0.2350, bbox_mAP_copypaste: 0.270 0.499 0.239 0.265 0.223 0.235
2022-09-13 19:44:51,073 - mmdet - INFO - Epoch [6][50/232]	lr: 2.000e-02, eta: 0:13:23, time: 0.613, data_time: 0.062, memory: 9927, loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0240, loss_cls: 0.1155, acc: 95.6064, loss_bbox: 0.1525, loss: 0.2972
2022-09-13 19:45:19,668 - mmdet - INFO - Epoch [6][100/232]	lr: 2.000e-02, eta: 0:13:01, time: 0.572, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0243, loss_cls: 0.1074, acc: 96.0576, loss_bbox: 0.1389, loss: 0.2755
2022-09-13 19:45:48,202 - mmdet - INFO - Epoch [6][150/232]	lr: 2.000e-02, eta: 0:12:39, time: 0.571, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0226, loss_cls: 0.1094, acc: 95.8760, loss_bbox: 0.1434, loss: 0.2803
2022-09-13 19:46:16,659 - mmdet - INFO - Epoch [6][200/232]	lr: 2.000e-02, eta: 0:12:16, time: 0.569, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0257, loss_cls: 0.1115, acc: 95.9229, loss_bbox: 0.1398, loss: 0.2820
2022-09-13 19:46:35,081 - mmdet - INFO - Saving checkpoint at 6 epochs
2022-09-13 19:46:57,006 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:46:57,677 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.267
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.542
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.228
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.204
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.241
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.277
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.474
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.474
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.474
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.427
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.460
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.428

2022-09-13 19:46:57,678 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.206 | liewen   | 0.163 | huahen   | 0.262 |
| baidian  | 0.225 | bengque  | 0.248 | zifu     | 0.718 |
| wuzi     | 0.047 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:46:57,688 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:46:57,688 - mmdet - INFO - Epoch(val) [6][288]	bbox_mAP: 0.2670, bbox_mAP_50: 0.5420, bbox_mAP_75: 0.2280, bbox_mAP_s: 0.2040, bbox_mAP_m: 0.2410, bbox_mAP_l: 0.2770, bbox_mAP_copypaste: 0.267 0.542 0.228 0.204 0.241 0.277
2022-09-13 19:47:28,604 - mmdet - INFO - Epoch [7][50/232]	lr: 2.000e-02, eta: 0:11:22, time: 0.615, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0056, loss_rpn_bbox: 0.0221, loss_cls: 0.1017, acc: 96.0117, loss_bbox: 0.1381, loss: 0.2675
2022-09-13 19:47:56,763 - mmdet - INFO - Epoch [7][100/232]	lr: 2.000e-02, eta: 0:10:59, time: 0.563, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0240, loss_cls: 0.1105, acc: 95.7617, loss_bbox: 0.1489, loss: 0.2880
2022-09-13 19:48:25,133 - mmdet - INFO - Epoch [7][150/232]	lr: 2.000e-02, eta: 0:10:36, time: 0.567, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0265, loss_cls: 0.1076, acc: 95.8906, loss_bbox: 0.1389, loss: 0.2779
2022-09-13 19:48:53,534 - mmdet - INFO - Epoch [7][200/232]	lr: 2.000e-02, eta: 0:10:12, time: 0.568, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0200, loss_cls: 0.0968, acc: 96.2920, loss_bbox: 0.1368, loss: 0.2585
2022-09-13 19:49:11,881 - mmdet - INFO - Saving checkpoint at 7 epochs
2022-09-13 19:49:34,429 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:49:34,877 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.238
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.455
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.213
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.333
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.243
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.210
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.380
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.380
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.380
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.416
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.345
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.332

2022-09-13 19:49:34,878 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.019 | liewen   | 0.184 | huahen   | 0.261 |
| baidian  | 0.211 | bengque  | 0.266 | zifu     | 0.715 |
| wuzi     | 0.009 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:49:34,895 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:49:34,895 - mmdet - INFO - Epoch(val) [7][288]	bbox_mAP: 0.2380, bbox_mAP_50: 0.4550, bbox_mAP_75: 0.2130, bbox_mAP_s: 0.3330, bbox_mAP_m: 0.2430, bbox_mAP_l: 0.2100, bbox_mAP_copypaste: 0.238 0.455 0.213 0.333 0.243 0.210
2022-09-13 19:50:05,917 - mmdet - INFO - Epoch [8][50/232]	lr: 2.000e-02, eta: 0:09:23, time: 0.616, data_time: 0.062, memory: 9927, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0209, loss_cls: 0.0851, acc: 96.6309, loss_bbox: 0.1310, loss: 0.2417
2022-09-13 19:50:34,596 - mmdet - INFO - Epoch [8][100/232]	lr: 2.000e-02, eta: 0:08:59, time: 0.574, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0222, loss_cls: 0.0908, acc: 96.4189, loss_bbox: 0.1403, loss: 0.2580
2022-09-13 19:51:03,090 - mmdet - INFO - Epoch [8][150/232]	lr: 2.000e-02, eta: 0:08:36, time: 0.570, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0230, loss_cls: 0.0996, acc: 96.1270, loss_bbox: 0.1393, loss: 0.2663
2022-09-13 19:51:31,242 - mmdet - INFO - Epoch [8][200/232]	lr: 2.000e-02, eta: 0:08:12, time: 0.563, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0224, loss_cls: 0.0959, acc: 96.1582, loss_bbox: 0.1461, loss: 0.2685
2022-09-13 19:51:49,801 - mmdet - INFO - Saving checkpoint at 8 epochs
2022-09-13 19:52:15,112 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:52:15,789 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.308
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.602
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.289
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.262
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.308
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.512
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.512
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.512
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.359
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.508
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.497

2022-09-13 19:52:15,789 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.545 | liewen   | 0.189 | huahen   | 0.259 |
| baidian  | 0.194 | bengque  | 0.274 | zifu     | 0.633 |
| wuzi     | 0.060 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:52:15,798 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:52:15,798 - mmdet - INFO - Epoch(val) [8][288]	bbox_mAP: 0.3080, bbox_mAP_50: 0.6020, bbox_mAP_75: 0.2890, bbox_mAP_s: 0.2620, bbox_mAP_m: 0.2500, bbox_mAP_l: 0.3080, bbox_mAP_copypaste: 0.308 0.602 0.289 0.262 0.250 0.308
2022-09-13 19:52:46,858 - mmdet - INFO - Epoch [9][50/232]	lr: 2.000e-03, eta: 0:07:24, time: 0.618, data_time: 0.060, memory: 9927, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0205, loss_cls: 0.0874, acc: 96.5928, loss_bbox: 0.1345, loss: 0.2461
2022-09-13 19:53:15,343 - mmdet - INFO - Epoch [9][100/232]	lr: 2.000e-03, eta: 0:07:00, time: 0.570, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0196, loss_cls: 0.0807, acc: 96.6992, loss_bbox: 0.1244, loss: 0.2280
2022-09-13 19:53:43,708 - mmdet - INFO - Epoch [9][150/232]	lr: 2.000e-03, eta: 0:06:36, time: 0.567, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0189, loss_cls: 0.0809, acc: 96.6484, loss_bbox: 0.1244, loss: 0.2279
2022-09-13 19:54:12,527 - mmdet - INFO - Epoch [9][200/232]	lr: 2.000e-03, eta: 0:06:12, time: 0.576, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0192, loss_cls: 0.0830, acc: 96.6357, loss_bbox: 0.1312, loss: 0.2369
2022-09-13 19:54:30,601 - mmdet - INFO - Saving checkpoint at 9 epochs
2022-09-13 19:54:51,875 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:54:52,265 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.382
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.651
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.369
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.298
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.294
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.344
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.514
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.514
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.514
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.432
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.434
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.463

2022-09-13 19:54:52,266 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.634 | liewen   | 0.244 | huahen   | 0.330 |
| baidian  | 0.239 | bengque  | 0.381 | zifu     | 0.797 |
| wuzi     | 0.046 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:54:52,271 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:54:52,271 - mmdet - INFO - Epoch(val) [9][288]	bbox_mAP: 0.3820, bbox_mAP_50: 0.6510, bbox_mAP_75: 0.3690, bbox_mAP_s: 0.2980, bbox_mAP_m: 0.2940, bbox_mAP_l: 0.3440, bbox_mAP_copypaste: 0.382 0.651 0.369 0.298 0.294 0.344
2022-09-13 19:55:23,294 - mmdet - INFO - Epoch [10][50/232]	lr: 2.000e-03, eta: 0:05:26, time: 0.617, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0191, loss_cls: 0.0809, acc: 96.6865, loss_bbox: 0.1336, loss: 0.2363
2022-09-13 19:55:51,804 - mmdet - INFO - Epoch [10][100/232]	lr: 2.000e-03, eta: 0:05:02, time: 0.570, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0190, loss_cls: 0.0714, acc: 97.1162, loss_bbox: 0.1193, loss: 0.2118
2022-09-13 19:56:20,281 - mmdet - INFO - Epoch [10][150/232]	lr: 2.000e-03, eta: 0:04:37, time: 0.570, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0155, loss_cls: 0.0694, acc: 97.2168, loss_bbox: 0.1117, loss: 0.1991
2022-09-13 19:56:48,949 - mmdet - INFO - Epoch [10][200/232]	lr: 2.000e-03, eta: 0:04:13, time: 0.573, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0184, loss_cls: 0.0737, acc: 97.0254, loss_bbox: 0.1192, loss: 0.2137
2022-09-13 19:57:07,122 - mmdet - INFO - Saving checkpoint at 10 epochs
2022-09-13 19:57:31,446 - mmdet - INFO - Evaluating bbox...
2022-09-13 19:57:31,805 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.380
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.654
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.364
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.383
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.294
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.341
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.501
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.501
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.501
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.441
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.398
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.470

2022-09-13 19:57:31,806 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.600 | liewen   | 0.241 | huahen   | 0.348 |
| baidian  | 0.239 | bengque  | 0.379 | zifu     | 0.809 |
| wuzi     | 0.042 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 19:57:31,816 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 19:57:31,816 - mmdet - INFO - Epoch(val) [10][288]	bbox_mAP: 0.3800, bbox_mAP_50: 0.6540, bbox_mAP_75: 0.3640, bbox_mAP_s: 0.3830, bbox_mAP_m: 0.2940, bbox_mAP_l: 0.3410, bbox_mAP_copypaste: 0.380 0.654 0.364 0.383 0.294 0.341
2022-09-13 19:58:02,996 - mmdet - INFO - Epoch [11][50/232]	lr: 2.000e-03, eta: 0:03:29, time: 0.620, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0173, loss_cls: 0.0699, acc: 97.1455, loss_bbox: 0.1151, loss: 0.2043
2022-09-13 19:58:31,680 - mmdet - INFO - Epoch [11][100/232]	lr: 2.000e-03, eta: 0:03:04, time: 0.574, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0192, loss_cls: 0.0746, acc: 96.9443, loss_bbox: 0.1266, loss: 0.2234
2022-09-13 19:59:00,398 - mmdet - INFO - Epoch [11][150/232]	lr: 2.000e-03, eta: 0:02:39, time: 0.574, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0170, loss_cls: 0.0686, acc: 97.1816, loss_bbox: 0.1202, loss: 0.2077
2022-09-13 19:59:28,914 - mmdet - INFO - Epoch [11][200/232]	lr: 2.000e-03, eta: 0:02:14, time: 0.570, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0166, loss_cls: 0.0748, acc: 96.9268, loss_bbox: 0.1199, loss: 0.2137
2022-09-13 19:59:47,152 - mmdet - INFO - Saving checkpoint at 11 epochs
2022-09-13 20:00:19,456 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:00:19,949 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.380
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.662
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.371
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.340
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.295
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.338
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.527
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.527
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.527
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.412
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.480
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.458

2022-09-13 20:00:19,949 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.600 | liewen   | 0.243 | huahen   | 0.343 |
| baidian  | 0.230 | bengque  | 0.361 | zifu     | 0.805 |
| wuzi     | 0.079 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:00:19,953 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:00:19,953 - mmdet - INFO - Epoch(val) [11][288]	bbox_mAP: 0.3800, bbox_mAP_50: 0.6620, bbox_mAP_75: 0.3710, bbox_mAP_s: 0.3400, bbox_mAP_m: 0.2950, bbox_mAP_l: 0.3380, bbox_mAP_copypaste: 0.380 0.662 0.371 0.340 0.295 0.338
2022-09-13 20:00:50,905 - mmdet - INFO - Epoch [12][50/232]	lr: 2.000e-04, eta: 0:01:32, time: 0.615, data_time: 0.064, memory: 9927, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0173, loss_cls: 0.0688, acc: 97.1670, loss_bbox: 0.1171, loss: 0.2052
2022-09-13 20:01:19,334 - mmdet - INFO - Epoch [12][100/232]	lr: 2.000e-04, eta: 0:01:06, time: 0.569, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0185, loss_cls: 0.0675, acc: 97.1143, loss_bbox: 0.1165, loss: 0.2055
2022-09-13 20:01:47,873 - mmdet - INFO - Epoch [12][150/232]	lr: 2.000e-04, eta: 0:00:41, time: 0.571, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0174, loss_cls: 0.0724, acc: 97.0371, loss_bbox: 0.1200, loss: 0.2117
2022-09-13 20:02:16,441 - mmdet - INFO - Epoch [12][200/232]	lr: 2.000e-04, eta: 0:00:16, time: 0.571, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0156, loss_cls: 0.0637, acc: 97.3740, loss_bbox: 0.1083, loss: 0.1897
2022-09-13 20:02:34,645 - mmdet - INFO - Saving checkpoint at 12 epochs
2022-09-13 20:02:59,492 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:02:59,847 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.384
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.665
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.366
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.378
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.298
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.344
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.536
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.536
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.536
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.435
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.477
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.475

2022-09-13 20:02:59,848 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.578 | liewen   | 0.244 | huahen   | 0.343 |
| baidian  | 0.230 | bengque  | 0.384 | zifu     | 0.813 |
| wuzi     | 0.095 | louguang | nan   | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:02:59,855 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:02:59,855 - mmdet - INFO - Epoch(val) [12][288]	bbox_mAP: 0.3840, bbox_mAP_50: 0.6650, bbox_mAP_75: 0.3660, bbox_mAP_s: 0.3780, bbox_mAP_m: 0.2980, bbox_mAP_l: 0.3440, bbox_mAP_copypaste: 0.384 0.665 0.366 0.378 0.298 0.344
