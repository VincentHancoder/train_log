2022-09-13 16:12:29,989 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.7 (default, May  7 2020, 21:25:33) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: GeForce RTX 3090
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.0, V11.0.194
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.7.0+cu110
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80
  - CuDNN 8.0.4
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.1+cu110
OpenCV: 4.6.0
MMCV: 1.6.1
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.25.1+df28da9
------------------------------------------------------------

2022-09-13 16:12:30,286 - mmdet - INFO - Distributed training: False
2022-09-13 16:12:30,571 - mmdet - INFO - Config:
dataset_type = 'CocoDataset'
data_root = '/home/hhn/mmdetection/20220830'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1500, 1000), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1500, 1000),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/train1.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1500, 1000), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/val1.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1500, 1000),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/val1.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1500, 1000),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=12)
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/hhn/mmdetection/pretrained/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=8)
model = dict(
    type='FasterRCNN',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=None),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=8,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
work_dir = './work_dirs/faster_rcnn_r50_fpn'
auto_resume = False
gpu_ids = [0]

2022-09-13 16:12:30,571 - mmdet - INFO - Set random seed to 1511621296, deterministic: False
2022-09-13 16:12:30,871 - mmdet - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': 'Conv2d'}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2022-09-13 16:12:31,170 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,172 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,173 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,176 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,179 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,181 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,183 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,190 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,193 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,195 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,197 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,199 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,201 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,208 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,210 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,212 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 16:12:31,229 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2022-09-13 16:12:31,253 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2022-09-13 16:12:31,262 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([9, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([9]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([32, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([32]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2022-09-13 16:12:35,009 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2022-09-13 16:12:35,018 - mmdet - INFO - load checkpoint from local path: /home/hhn/mmdetection/pretrained/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth
2022-09-13 16:12:35,131 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for roi_head.bbox_head.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([9, 1024]).
size mismatch for roi_head.bbox_head.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([9]).
size mismatch for roi_head.bbox_head.fc_reg.weight: copying a param with shape torch.Size([320, 1024]) from checkpoint, the shape in current model is torch.Size([32, 1024]).
size mismatch for roi_head.bbox_head.fc_reg.bias: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([32]).
2022-09-13 16:12:35,135 - mmdet - INFO - Start running, host: hhn@cv-8k3090, work_dir: /home/hhn/mmdetection/work_dirs/faster_rcnn_r50_fpn
2022-09-13 16:12:35,135 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2022-09-13 16:12:35,136 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2022-09-13 16:12:35,136 - mmdet - INFO - Checkpoints will be saved to /home/hhn/mmdetection/work_dirs/faster_rcnn_r50_fpn by HardDiskBackend.
2022-09-13 16:13:05,414 - mmdet - INFO - Epoch [1][50/231]	lr: 1.978e-03, eta: 0:27:18, time: 0.602, data_time: 0.060, memory: 9925, loss_rpn_cls: 0.0775, loss_rpn_bbox: 0.0302, loss_cls: 0.5839, acc: 86.4307, loss_bbox: 0.1503, loss: 0.8420
2022-09-13 16:13:32,835 - mmdet - INFO - Epoch [1][100/231]	lr: 3.976e-03, eta: 0:25:37, time: 0.548, data_time: 0.017, memory: 9925, loss_rpn_cls: 0.0147, loss_rpn_bbox: 0.0289, loss_cls: 0.2198, acc: 94.2188, loss_bbox: 0.2163, loss: 0.4796
2022-09-13 16:14:00,638 - mmdet - INFO - Epoch [1][150/231]	lr: 5.974e-03, eta: 0:24:51, time: 0.556, data_time: 0.018, memory: 9925, loss_rpn_cls: 0.0182, loss_rpn_bbox: 0.0256, loss_cls: 0.1852, acc: 94.5312, loss_bbox: 0.1976, loss: 0.4266
2022-09-13 16:14:28,565 - mmdet - INFO - Epoch [1][200/231]	lr: 7.972e-03, eta: 0:24:16, time: 0.559, data_time: 0.019, memory: 9925, loss_rpn_cls: 0.0150, loss_rpn_bbox: 0.0260, loss_cls: 0.1631, acc: 94.6758, loss_bbox: 0.1793, loss: 0.3834
2022-09-13 16:14:45,812 - mmdet - INFO - Saving checkpoint at 1 epochs
2022-09-13 16:15:07,094 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:15:07,577 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.181
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.360
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.145
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.108
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.077
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.171
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.293
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.293
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.293
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.191
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.180
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.322

2022-09-13 16:15:07,578 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.062 | liewen   | 0.095 | huahen   | 0.203 |
| baidian  | 0.212 | bengque  | 0.020 | zifu     | 0.677 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:15:07,581 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:15:07,582 - mmdet - INFO - Epoch(val) [1][288]	bbox_mAP: 0.1810, bbox_mAP_50: 0.3600, bbox_mAP_75: 0.1450, bbox_mAP_s: 0.1080, bbox_mAP_m: 0.0770, bbox_mAP_l: 0.1710, bbox_mAP_copypaste: 0.181 0.360 0.145 0.108 0.077 0.171
2022-09-13 16:15:37,884 - mmdet - INFO - Epoch [2][50/231]	lr: 1.121e-02, eta: 0:21:10, time: 0.602, data_time: 0.061, memory: 9925, loss_rpn_cls: 0.0101, loss_rpn_bbox: 0.0287, loss_cls: 0.1677, acc: 94.5361, loss_bbox: 0.1700, loss: 0.3765
2022-09-13 16:16:05,985 - mmdet - INFO - Epoch [2][100/231]	lr: 1.321e-02, eta: 0:21:04, time: 0.562, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0104, loss_rpn_bbox: 0.0306, loss_cls: 0.1524, acc: 95.0039, loss_bbox: 0.1528, loss: 0.3461
2022-09-13 16:16:33,653 - mmdet - INFO - Epoch [2][150/231]	lr: 1.520e-02, eta: 0:20:49, time: 0.553, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0116, loss_rpn_bbox: 0.0283, loss_cls: 0.1422, acc: 95.3535, loss_bbox: 0.1495, loss: 0.3316
2022-09-13 16:17:01,638 - mmdet - INFO - Epoch [2][200/231]	lr: 1.720e-02, eta: 0:20:33, time: 0.560, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0123, loss_rpn_bbox: 0.0249, loss_cls: 0.1282, acc: 95.6104, loss_bbox: 0.1414, loss: 0.3068
2022-09-13 16:17:18,896 - mmdet - INFO - Saving checkpoint at 2 epochs
2022-09-13 16:17:41,347 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:17:41,964 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.199
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.447
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.149
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.127
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.100
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.190
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.390
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.390
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.390
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.438
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.356
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.442

2022-09-13 16:17:41,964 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.156 | liewen   | 0.120 | huahen   | 0.222 |
| baidian  | 0.251 | bengque  | 0.060 | zifu     | 0.583 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:17:41,988 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:17:41,988 - mmdet - INFO - Epoch(val) [2][288]	bbox_mAP: 0.1990, bbox_mAP_50: 0.4470, bbox_mAP_75: 0.1490, bbox_mAP_s: 0.1270, bbox_mAP_m: 0.1000, bbox_mAP_l: 0.1900, bbox_mAP_copypaste: 0.199 0.447 0.149 0.127 0.100 0.190
2022-09-13 16:18:12,274 - mmdet - INFO - Epoch [3][50/231]	lr: 2.000e-02, eta: 0:18:55, time: 0.602, data_time: 0.062, memory: 9925, loss_rpn_cls: 0.0122, loss_rpn_bbox: 0.0265, loss_cls: 0.1254, acc: 95.9219, loss_bbox: 0.1359, loss: 0.3000
2022-09-13 16:18:40,198 - mmdet - INFO - Epoch [3][100/231]	lr: 2.000e-02, eta: 0:18:41, time: 0.558, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0146, loss_rpn_bbox: 0.0297, loss_cls: 0.1262, acc: 95.6152, loss_bbox: 0.1432, loss: 0.3136
2022-09-13 16:19:08,072 - mmdet - INFO - Epoch [3][150/231]	lr: 2.000e-02, eta: 0:18:24, time: 0.557, data_time: 0.015, memory: 9925, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0278, loss_cls: 0.1430, acc: 95.4814, loss_bbox: 0.1345, loss: 0.3180
2022-09-13 16:19:35,574 - mmdet - INFO - Epoch [3][200/231]	lr: 2.000e-02, eta: 0:18:05, time: 0.550, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0295, loss_cls: 0.1333, acc: 95.4922, loss_bbox: 0.1470, loss: 0.3225
2022-09-13 16:19:52,750 - mmdet - INFO - Saving checkpoint at 3 epochs
2022-09-13 16:20:15,220 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:20:15,750 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.188
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.398
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.159
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.142
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.118
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.200
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.331
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.331
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.331
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.203
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.212
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.328

2022-09-13 16:20:15,751 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.096 | liewen   | 0.074 | huahen   | 0.264 |
| baidian  | 0.194 | bengque  | 0.024 | zifu     | 0.667 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:20:15,756 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:20:15,756 - mmdet - INFO - Epoch(val) [3][288]	bbox_mAP: 0.1880, bbox_mAP_50: 0.3980, bbox_mAP_75: 0.1590, bbox_mAP_s: 0.1420, bbox_mAP_m: 0.1180, bbox_mAP_l: 0.2000, bbox_mAP_copypaste: 0.188 0.398 0.159 0.142 0.118 0.200
2022-09-13 16:20:45,989 - mmdet - INFO - Epoch [4][50/231]	lr: 2.000e-02, eta: 0:16:51, time: 0.601, data_time: 0.060, memory: 9925, loss_rpn_cls: 0.0091, loss_rpn_bbox: 0.0247, loss_cls: 0.1095, acc: 96.1104, loss_bbox: 0.1307, loss: 0.2740
2022-09-13 16:21:13,493 - mmdet - INFO - Epoch [4][100/231]	lr: 2.000e-02, eta: 0:16:33, time: 0.550, data_time: 0.014, memory: 9925, loss_rpn_cls: 0.0061, loss_rpn_bbox: 0.0257, loss_cls: 0.1249, acc: 95.4512, loss_bbox: 0.1444, loss: 0.3012
2022-09-13 16:21:41,255 - mmdet - INFO - Epoch [4][150/231]	lr: 2.000e-02, eta: 0:16:14, time: 0.555, data_time: 0.015, memory: 9925, loss_rpn_cls: 0.0141, loss_rpn_bbox: 0.0259, loss_cls: 0.1277, acc: 95.7090, loss_bbox: 0.1422, loss: 0.3099
2022-09-13 16:22:09,283 - mmdet - INFO - Epoch [4][200/231]	lr: 2.000e-02, eta: 0:15:55, time: 0.561, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0098, loss_rpn_bbox: 0.0290, loss_cls: 0.1346, acc: 95.4277, loss_bbox: 0.1557, loss: 0.3291
2022-09-13 16:22:26,511 - mmdet - INFO - Saving checkpoint at 4 epochs
2022-09-13 16:22:52,032 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:22:52,676 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.254
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.482
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.229
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.165
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.124
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.235
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.438
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.438
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.438
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.453
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.268
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.438

2022-09-13 16:22:52,676 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.268 | liewen   | 0.114 | huahen   | 0.307 |
| baidian  | 0.264 | bengque  | 0.059 | zifu     | 0.763 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:22:52,684 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:22:52,684 - mmdet - INFO - Epoch(val) [4][288]	bbox_mAP: 0.2540, bbox_mAP_50: 0.4820, bbox_mAP_75: 0.2290, bbox_mAP_s: 0.1650, bbox_mAP_m: 0.1240, bbox_mAP_l: 0.2350, bbox_mAP_copypaste: 0.254 0.482 0.229 0.165 0.124 0.235
2022-09-13 16:23:23,027 - mmdet - INFO - Epoch [5][50/231]	lr: 2.000e-02, eta: 0:14:53, time: 0.603, data_time: 0.060, memory: 9925, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0269, loss_cls: 0.1119, acc: 95.8252, loss_bbox: 0.1385, loss: 0.2850
2022-09-13 16:23:50,841 - mmdet - INFO - Epoch [5][100/231]	lr: 2.000e-02, eta: 0:14:33, time: 0.556, data_time: 0.014, memory: 9925, loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0269, loss_cls: 0.1208, acc: 95.6426, loss_bbox: 0.1475, loss: 0.3010
2022-09-13 16:24:18,599 - mmdet - INFO - Epoch [5][150/231]	lr: 2.000e-02, eta: 0:14:13, time: 0.555, data_time: 0.014, memory: 9925, loss_rpn_cls: 0.0084, loss_rpn_bbox: 0.0209, loss_cls: 0.1305, acc: 95.3545, loss_bbox: 0.1423, loss: 0.3020
2022-09-13 16:24:46,583 - mmdet - INFO - Epoch [5][200/231]	lr: 2.000e-02, eta: 0:13:52, time: 0.560, data_time: 0.014, memory: 9925, loss_rpn_cls: 0.0067, loss_rpn_bbox: 0.0248, loss_cls: 0.1207, acc: 95.5430, loss_bbox: 0.1508, loss: 0.3030
2022-09-13 16:25:03,639 - mmdet - INFO - Saving checkpoint at 5 epochs
2022-09-13 16:25:35,462 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:25:35,780 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.239
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.479
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.190
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.291
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.126
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.246
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.367
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.367
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.367
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.369
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.229
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.371

2022-09-13 16:25:35,781 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.307 | liewen   | 0.073 | huahen   | 0.255 |
| baidian  | 0.223 | bengque  | 0.082 | zifu     | 0.735 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:25:35,785 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:25:35,785 - mmdet - INFO - Epoch(val) [5][288]	bbox_mAP: 0.2390, bbox_mAP_50: 0.4790, bbox_mAP_75: 0.1900, bbox_mAP_s: 0.2910, bbox_mAP_m: 0.1260, bbox_mAP_l: 0.2460, bbox_mAP_copypaste: 0.239 0.479 0.190 0.291 0.126 0.246
2022-09-13 16:26:06,274 - mmdet - INFO - Epoch [6][50/231]	lr: 2.000e-02, eta: 0:12:57, time: 0.606, data_time: 0.059, memory: 9925, loss_rpn_cls: 0.0123, loss_rpn_bbox: 0.0245, loss_cls: 0.1195, acc: 95.7158, loss_bbox: 0.1406, loss: 0.2970
2022-09-13 16:26:34,526 - mmdet - INFO - Epoch [6][100/231]	lr: 2.000e-02, eta: 0:12:36, time: 0.565, data_time: 0.015, memory: 9925, loss_rpn_cls: 0.0052, loss_rpn_bbox: 0.0216, loss_cls: 0.0988, acc: 96.3467, loss_bbox: 0.1311, loss: 0.2567
2022-09-13 16:27:02,782 - mmdet - INFO - Epoch [6][150/231]	lr: 2.000e-02, eta: 0:12:15, time: 0.565, data_time: 0.015, memory: 9925, loss_rpn_cls: 0.0074, loss_rpn_bbox: 0.0276, loss_cls: 0.1093, acc: 95.7324, loss_bbox: 0.1482, loss: 0.2925
2022-09-13 16:27:31,324 - mmdet - INFO - Epoch [6][200/231]	lr: 2.000e-02, eta: 0:11:54, time: 0.571, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0077, loss_rpn_bbox: 0.0246, loss_cls: 0.1209, acc: 95.5215, loss_bbox: 0.1471, loss: 0.3001
2022-09-13 16:27:48,704 - mmdet - INFO - Saving checkpoint at 6 epochs
2022-09-13 16:28:13,512 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:28:13,965 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.287
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.557
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.268
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.328
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.201
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.300
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.450
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.450
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.450
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.455
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.292
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.475

2022-09-13 16:28:13,966 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.245 | liewen   | 0.154 | huahen   | 0.350 |
| baidian  | 0.231 | bengque  | 0.231 | zifu     | 0.800 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:28:13,970 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:28:13,971 - mmdet - INFO - Epoch(val) [6][288]	bbox_mAP: 0.2870, bbox_mAP_50: 0.5570, bbox_mAP_75: 0.2680, bbox_mAP_s: 0.3280, bbox_mAP_m: 0.2010, bbox_mAP_l: 0.3000, bbox_mAP_copypaste: 0.287 0.557 0.268 0.328 0.201 0.300
2022-09-13 16:28:44,731 - mmdet - INFO - Epoch [7][50/231]	lr: 2.000e-02, eta: 0:11:03, time: 0.612, data_time: 0.061, memory: 9925, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0224, loss_cls: 0.1015, acc: 95.9775, loss_bbox: 0.1394, loss: 0.2677
2022-09-13 16:29:13,331 - mmdet - INFO - Epoch [7][100/231]	lr: 2.000e-02, eta: 0:10:42, time: 0.572, data_time: 0.017, memory: 9925, loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0232, loss_cls: 0.1163, acc: 95.5244, loss_bbox: 0.1523, loss: 0.2981
2022-09-13 16:29:42,057 - mmdet - INFO - Epoch [7][150/231]	lr: 2.000e-02, eta: 0:10:20, time: 0.574, data_time: 0.018, memory: 9925, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0234, loss_cls: 0.1055, acc: 95.9580, loss_bbox: 0.1410, loss: 0.2777
2022-09-13 16:30:10,492 - mmdet - INFO - Epoch [7][200/231]	lr: 2.000e-02, eta: 0:09:57, time: 0.569, data_time: 0.017, memory: 9925, loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0250, loss_cls: 0.1040, acc: 96.0205, loss_bbox: 0.1385, loss: 0.2723
2022-09-13 16:30:27,951 - mmdet - INFO - Saving checkpoint at 7 epochs
2022-09-13 16:33:17,239 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:33:17,789 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.293
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.553
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.246
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.355
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.186
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.298
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.426
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.426
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.426
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.470
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.267
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.436

2022-09-13 16:33:17,789 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.303 | liewen   | 0.164 | huahen   | 0.353 |
| baidian  | 0.253 | bengque  | 0.259 | zifu     | 0.719 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:33:17,795 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:33:17,795 - mmdet - INFO - Epoch(val) [7][288]	bbox_mAP: 0.2930, bbox_mAP_50: 0.5530, bbox_mAP_75: 0.2460, bbox_mAP_s: 0.3550, bbox_mAP_m: 0.1860, bbox_mAP_l: 0.2980, bbox_mAP_copypaste: 0.293 0.553 0.246 0.355 0.186 0.298
2022-09-13 16:33:48,769 - mmdet - INFO - Epoch [8][50/231]	lr: 2.000e-02, eta: 0:09:10, time: 0.616, data_time: 0.062, memory: 9925, loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0219, loss_cls: 0.0995, acc: 96.2070, loss_bbox: 0.1391, loss: 0.2647
2022-09-13 16:34:17,063 - mmdet - INFO - Epoch [8][100/231]	lr: 2.000e-02, eta: 0:08:47, time: 0.566, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0240, loss_cls: 0.1009, acc: 96.0371, loss_bbox: 0.1496, loss: 0.2803
2022-09-13 16:34:45,486 - mmdet - INFO - Epoch [8][150/231]	lr: 2.000e-02, eta: 0:08:24, time: 0.568, data_time: 0.017, memory: 9925, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0214, loss_cls: 0.0952, acc: 96.3457, loss_bbox: 0.1302, loss: 0.2516
2022-09-13 16:35:13,719 - mmdet - INFO - Epoch [8][200/231]	lr: 2.000e-02, eta: 0:08:00, time: 0.565, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0231, loss_cls: 0.1006, acc: 96.0205, loss_bbox: 0.1424, loss: 0.2718
2022-09-13 16:35:31,209 - mmdet - INFO - Saving checkpoint at 8 epochs
2022-09-13 16:36:08,905 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:36:09,358 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.298
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.567
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.271
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.357
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.146
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.338
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.454
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.454
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.454
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.453
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.291
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.486

2022-09-13 16:36:09,359 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.371 | liewen   | 0.196 | huahen   | 0.312 |
| baidian  | 0.213 | bengque  | 0.242 | zifu     | 0.756 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:36:09,366 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:36:09,366 - mmdet - INFO - Epoch(val) [8][288]	bbox_mAP: 0.2980, bbox_mAP_50: 0.5670, bbox_mAP_75: 0.2710, bbox_mAP_s: 0.3570, bbox_mAP_m: 0.1460, bbox_mAP_l: 0.3380, bbox_mAP_copypaste: 0.298 0.567 0.271 0.357 0.146 0.338
2022-09-13 16:36:40,477 - mmdet - INFO - Epoch [9][50/231]	lr: 2.000e-03, eta: 0:07:15, time: 0.619, data_time: 0.064, memory: 9925, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0230, loss_cls: 0.0962, acc: 96.1523, loss_bbox: 0.1437, loss: 0.2666
2022-09-13 16:37:08,937 - mmdet - INFO - Epoch [9][100/231]	lr: 2.000e-03, eta: 0:06:52, time: 0.569, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0181, loss_cls: 0.0816, acc: 96.7861, loss_bbox: 0.1204, loss: 0.2239
2022-09-13 16:37:37,423 - mmdet - INFO - Epoch [9][150/231]	lr: 2.000e-03, eta: 0:06:28, time: 0.570, data_time: 0.017, memory: 9925, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0182, loss_cls: 0.0705, acc: 97.1758, loss_bbox: 0.1180, loss: 0.2094
2022-09-13 16:38:06,124 - mmdet - INFO - Epoch [9][200/231]	lr: 2.000e-03, eta: 0:06:04, time: 0.574, data_time: 0.018, memory: 9925, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0186, loss_cls: 0.0795, acc: 96.8008, loss_bbox: 0.1258, loss: 0.2269
2022-09-13 16:38:23,700 - mmdet - INFO - Saving checkpoint at 9 epochs
2022-09-13 16:38:47,327 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:38:47,805 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.352
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.637
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.328
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.352
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.177
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.386
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.487
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.487
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.487
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.445
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.318
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.516

2022-09-13 16:38:47,806 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.385 | liewen   | 0.223 | huahen   | 0.375 |
| baidian  | 0.265 | bengque  | 0.375 | zifu     | 0.839 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:38:47,811 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:38:47,811 - mmdet - INFO - Epoch(val) [9][288]	bbox_mAP: 0.3520, bbox_mAP_50: 0.6370, bbox_mAP_75: 0.3280, bbox_mAP_s: 0.3520, bbox_mAP_m: 0.1770, bbox_mAP_l: 0.3860, bbox_mAP_copypaste: 0.352 0.637 0.328 0.352 0.177 0.386
2022-09-13 16:39:18,790 - mmdet - INFO - Epoch [10][50/231]	lr: 2.000e-03, eta: 0:05:20, time: 0.616, data_time: 0.063, memory: 9925, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0149, loss_cls: 0.0656, acc: 97.3242, loss_bbox: 0.1068, loss: 0.1900
2022-09-13 16:39:47,374 - mmdet - INFO - Epoch [10][100/231]	lr: 2.000e-03, eta: 0:04:56, time: 0.572, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0188, loss_cls: 0.0797, acc: 96.7803, loss_bbox: 0.1312, loss: 0.2328
2022-09-13 16:40:15,700 - mmdet - INFO - Epoch [10][150/231]	lr: 2.000e-03, eta: 0:04:32, time: 0.567, data_time: 0.017, memory: 9925, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0174, loss_cls: 0.0739, acc: 97.0127, loss_bbox: 0.1159, loss: 0.2101
2022-09-13 16:40:44,286 - mmdet - INFO - Epoch [10][200/231]	lr: 2.000e-03, eta: 0:04:08, time: 0.572, data_time: 0.017, memory: 9925, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0182, loss_cls: 0.0760, acc: 96.9570, loss_bbox: 0.1246, loss: 0.2218
2022-09-13 16:41:02,020 - mmdet - INFO - Saving checkpoint at 10 epochs
2022-09-13 16:41:33,694 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:41:34,052 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.379
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.644
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.355
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.379
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.201
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.415
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.493
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.493
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.493
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.459
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.341
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.520

2022-09-13 16:41:34,053 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.521 | liewen   | 0.234 | huahen   | 0.376 |
| baidian  | 0.263 | bengque  | 0.421 | zifu     | 0.838 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:41:34,059 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:41:34,059 - mmdet - INFO - Epoch(val) [10][288]	bbox_mAP: 0.3790, bbox_mAP_50: 0.6440, bbox_mAP_75: 0.3550, bbox_mAP_s: 0.3790, bbox_mAP_m: 0.2010, bbox_mAP_l: 0.4150, bbox_mAP_copypaste: 0.379 0.644 0.355 0.379 0.201 0.415
2022-09-13 16:42:05,252 - mmdet - INFO - Epoch [11][50/231]	lr: 2.000e-03, eta: 0:03:25, time: 0.620, data_time: 0.063, memory: 9925, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0162, loss_cls: 0.0726, acc: 97.1934, loss_bbox: 0.1105, loss: 0.2023
2022-09-13 16:42:34,031 - mmdet - INFO - Epoch [11][100/231]	lr: 2.000e-03, eta: 0:03:01, time: 0.576, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0165, loss_cls: 0.0667, acc: 97.2539, loss_bbox: 0.1107, loss: 0.1971
2022-09-13 16:43:02,630 - mmdet - INFO - Epoch [11][150/231]	lr: 2.000e-03, eta: 0:02:36, time: 0.572, data_time: 0.017, memory: 9925, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0172, loss_cls: 0.0715, acc: 97.0693, loss_bbox: 0.1191, loss: 0.2107
2022-09-13 16:43:31,278 - mmdet - INFO - Epoch [11][200/231]	lr: 2.000e-03, eta: 0:02:12, time: 0.573, data_time: 0.017, memory: 9925, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0201, loss_cls: 0.0687, acc: 97.1953, loss_bbox: 0.1199, loss: 0.2111
2022-09-13 16:43:48,851 - mmdet - INFO - Saving checkpoint at 11 epochs
2022-09-13 16:44:27,220 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:44:27,567 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.371
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.638
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.357
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.384
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.197
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.413
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.488
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.488
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.488
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.449
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.329
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.525

2022-09-13 16:44:27,568 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.471 | liewen   | 0.224 | huahen   | 0.383 |
| baidian  | 0.239 | bengque  | 0.443 | zifu     | 0.838 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:44:27,577 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:44:27,577 - mmdet - INFO - Epoch(val) [11][288]	bbox_mAP: 0.3710, bbox_mAP_50: 0.6380, bbox_mAP_75: 0.3570, bbox_mAP_s: 0.3840, bbox_mAP_m: 0.1970, bbox_mAP_l: 0.4130, bbox_mAP_copypaste: 0.371 0.638 0.357 0.384 0.197 0.413
2022-09-13 16:44:58,820 - mmdet - INFO - Epoch [12][50/231]	lr: 2.000e-04, eta: 0:01:30, time: 0.621, data_time: 0.063, memory: 9925, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0176, loss_cls: 0.0724, acc: 97.1357, loss_bbox: 0.1183, loss: 0.2108
2022-09-13 16:45:27,567 - mmdet - INFO - Epoch [12][100/231]	lr: 2.000e-04, eta: 0:01:05, time: 0.575, data_time: 0.017, memory: 9925, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0194, loss_cls: 0.0687, acc: 97.1104, loss_bbox: 0.1222, loss: 0.2125
2022-09-13 16:45:56,243 - mmdet - INFO - Epoch [12][150/231]	lr: 2.000e-04, eta: 0:00:40, time: 0.573, data_time: 0.016, memory: 9925, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0159, loss_cls: 0.0642, acc: 97.3516, loss_bbox: 0.1083, loss: 0.1915
2022-09-13 16:46:24,831 - mmdet - INFO - Epoch [12][200/231]	lr: 2.000e-04, eta: 0:00:15, time: 0.572, data_time: 0.018, memory: 9925, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0168, loss_cls: 0.0640, acc: 97.3242, loss_bbox: 0.1094, loss: 0.1926
2022-09-13 16:46:42,518 - mmdet - INFO - Saving checkpoint at 12 epochs
2022-09-13 16:47:14,077 - mmdet - INFO - Evaluating bbox...
2022-09-13 16:47:14,536 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.376
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.643
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.364
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.398
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.203
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.416
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.492
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.492
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.492
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.463
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.331
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.521

2022-09-13 16:47:14,537 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.487 | liewen   | 0.235 | huahen   | 0.387 |
| baidian  | 0.251 | bengque  | 0.435 | zifu     | 0.835 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 16:47:14,541 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 16:47:14,541 - mmdet - INFO - Epoch(val) [12][288]	bbox_mAP: 0.3760, bbox_mAP_50: 0.6430, bbox_mAP_75: 0.3640, bbox_mAP_s: 0.3980, bbox_mAP_m: 0.2030, bbox_mAP_l: 0.4160, bbox_mAP_copypaste: 0.376 0.643 0.364 0.398 0.203 0.416
