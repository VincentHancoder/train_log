2022-09-13 20:10:11,503 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.7 (default, May  7 2020, 21:25:33) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: GeForce RTX 3090
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.0, V11.0.194
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.7.0+cu110
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80
  - CuDNN 8.0.4
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.1+cu110
OpenCV: 4.6.0
MMCV: 1.6.1
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.25.1+df28da9
------------------------------------------------------------

2022-09-13 20:10:11,867 - mmdet - INFO - Distributed training: False
2022-09-13 20:10:12,203 - mmdet - INFO - Config:
dataset_type = 'CocoDataset'
data_root = '/home/hhn/mmdetection/20220830'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1500, 1000), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1500, 1000),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/train5.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1500, 1000), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/val5.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1500, 1000),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/val5.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1500, 1000),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=12)
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/hhn/mmdetection/pretrained/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=8)
model = dict(
    type='FasterRCNN',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=None),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=8,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
work_dir = './work_dirs/faster_rcnn_r50_fpn'
auto_resume = False
gpu_ids = [0]

2022-09-13 20:10:12,204 - mmdet - INFO - Set random seed to 1123762167, deterministic: False
2022-09-13 20:10:12,657 - mmdet - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': 'Conv2d'}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2022-09-13 20:10:13,047 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,051 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,055 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,067 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,072 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,075 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,079 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,088 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,095 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,104 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,106 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,109 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,112 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,143 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,148 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,153 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 20:10:13,197 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2022-09-13 20:10:13,229 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2022-09-13 20:10:13,238 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([9, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([9]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([32, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([32]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2022-09-13 20:10:16,641 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2022-09-13 20:10:16,650 - mmdet - INFO - load checkpoint from local path: /home/hhn/mmdetection/pretrained/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth
2022-09-13 20:10:16,773 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for roi_head.bbox_head.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([9, 1024]).
size mismatch for roi_head.bbox_head.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([9]).
size mismatch for roi_head.bbox_head.fc_reg.weight: copying a param with shape torch.Size([320, 1024]) from checkpoint, the shape in current model is torch.Size([32, 1024]).
size mismatch for roi_head.bbox_head.fc_reg.bias: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([32]).
2022-09-13 20:10:16,781 - mmdet - INFO - Start running, host: hhn@cv-8k3090, work_dir: /home/hhn/mmdetection/work_dirs/faster_rcnn_r50_fpn
2022-09-13 20:10:16,781 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2022-09-13 20:10:16,782 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2022-09-13 20:10:16,782 - mmdet - INFO - Checkpoints will be saved to /home/hhn/mmdetection/work_dirs/faster_rcnn_r50_fpn by HardDiskBackend.
2022-09-13 20:10:47,883 - mmdet - INFO - Epoch [1][50/234]	lr: 1.978e-03, eta: 0:28:26, time: 0.619, data_time: 0.062, memory: 9927, loss_rpn_cls: 0.0764, loss_rpn_bbox: 0.0277, loss_cls: 0.5018, acc: 94.4287, loss_bbox: 0.1331, loss: 0.7391
2022-09-13 20:11:16,280 - mmdet - INFO - Epoch [1][100/234]	lr: 3.976e-03, eta: 0:26:46, time: 0.568, data_time: 0.016, memory: 9927, loss_rpn_cls: 0.0201, loss_rpn_bbox: 0.0300, loss_cls: 0.2045, acc: 94.5645, loss_bbox: 0.2061, loss: 0.4606
2022-09-13 20:11:44,982 - mmdet - INFO - Epoch [1][150/234]	lr: 5.974e-03, eta: 0:25:59, time: 0.574, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0100, loss_rpn_bbox: 0.0215, loss_cls: 0.1738, acc: 94.4971, loss_bbox: 0.1964, loss: 0.4017
2022-09-13 20:12:13,305 - mmdet - INFO - Epoch [1][200/234]	lr: 7.972e-03, eta: 0:25:17, time: 0.566, data_time: 0.016, memory: 9927, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0288, loss_cls: 0.1621, acc: 94.8506, loss_bbox: 0.1777, loss: 0.3812
2022-09-13 20:12:32,772 - mmdet - INFO - Saving checkpoint at 1 epochs
2022-09-13 20:12:54,153 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:12:54,992 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.143
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.296
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.127
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.129
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.121
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.141
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.271
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.271
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.271
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.294
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.270
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.294

2022-09-13 20:12:54,993 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.044 | liewen   | 0.082 | huahen   | 0.198 |
| baidian  | 0.146 | bengque  | 0.025 | zifu     | 0.647 |
| wuzi     | 0.000 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:12:55,005 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:12:55,005 - mmdet - INFO - Epoch(val) [1][288]	bbox_mAP: 0.1430, bbox_mAP_50: 0.2960, bbox_mAP_75: 0.1270, bbox_mAP_s: 0.1290, bbox_mAP_m: 0.1210, bbox_mAP_l: 0.1410, bbox_mAP_copypaste: 0.143 0.296 0.127 0.129 0.121 0.141
2022-09-13 20:13:26,381 - mmdet - INFO - Epoch [2][50/234]	lr: 1.133e-02, eta: 0:21:51, time: 0.624, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0152, loss_rpn_bbox: 0.0276, loss_cls: 0.1452, acc: 95.2588, loss_bbox: 0.1514, loss: 0.3394
2022-09-13 20:13:54,928 - mmdet - INFO - Epoch [2][100/234]	lr: 1.333e-02, eta: 0:21:44, time: 0.571, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0112, loss_rpn_bbox: 0.0252, loss_cls: 0.1510, acc: 95.1553, loss_bbox: 0.1521, loss: 0.3396
2022-09-13 20:14:23,355 - mmdet - INFO - Epoch [2][150/234]	lr: 1.532e-02, eta: 0:21:30, time: 0.569, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0103, loss_rpn_bbox: 0.0295, loss_cls: 0.1542, acc: 95.2480, loss_bbox: 0.1471, loss: 0.3411
2022-09-13 20:14:52,242 - mmdet - INFO - Epoch [2][200/234]	lr: 1.732e-02, eta: 0:21:16, time: 0.578, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0153, loss_rpn_bbox: 0.0307, loss_cls: 0.1274, acc: 95.8535, loss_bbox: 0.1374, loss: 0.3108
2022-09-13 20:15:11,602 - mmdet - INFO - Saving checkpoint at 2 epochs
2022-09-13 20:15:33,149 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:15:33,621 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.152
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.326
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.149
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.093
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.105
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.180
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.265
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.265
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.265
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.188
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.189
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.308

2022-09-13 20:15:33,622 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.128 | liewen   | 0.143 | huahen   | 0.177 |
| baidian  | 0.151 | bengque  | 0.014 | zifu     | 0.601 |
| wuzi     | 0.000 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:15:33,631 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:15:33,631 - mmdet - INFO - Epoch(val) [2][288]	bbox_mAP: 0.1520, bbox_mAP_50: 0.3260, bbox_mAP_75: 0.1490, bbox_mAP_s: 0.0930, bbox_mAP_m: 0.1050, bbox_mAP_l: 0.1800, bbox_mAP_copypaste: 0.152 0.326 0.149 0.093 0.105 0.180
2022-09-13 20:16:04,773 - mmdet - INFO - Epoch [3][50/234]	lr: 2.000e-02, eta: 0:19:28, time: 0.619, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0125, loss_rpn_bbox: 0.0285, loss_cls: 0.1396, acc: 95.1436, loss_bbox: 0.1441, loss: 0.3248
2022-09-13 20:16:33,489 - mmdet - INFO - Epoch [3][100/234]	lr: 2.000e-02, eta: 0:19:15, time: 0.574, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0271, loss_cls: 0.1424, acc: 95.2822, loss_bbox: 0.1482, loss: 0.3265
2022-09-13 20:17:01,914 - mmdet - INFO - Epoch [3][150/234]	lr: 2.000e-02, eta: 0:18:59, time: 0.568, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0265, loss_cls: 0.1271, acc: 95.8408, loss_bbox: 0.1320, loss: 0.2983
2022-09-13 20:17:30,739 - mmdet - INFO - Epoch [3][200/234]	lr: 2.000e-02, eta: 0:18:42, time: 0.576, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0094, loss_rpn_bbox: 0.0232, loss_cls: 0.1302, acc: 95.7832, loss_bbox: 0.1358, loss: 0.2986
2022-09-13 20:17:50,137 - mmdet - INFO - Saving checkpoint at 3 epochs
2022-09-13 20:18:14,711 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:18:15,298 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.163
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.337
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.141
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.101
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.113
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.179
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.269
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.269
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.269
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.216
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.201
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.291

2022-09-13 20:18:15,299 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.070 | liewen   | 0.162 | huahen   | 0.163 |
| baidian  | 0.158 | bengque  | 0.048 | zifu     | 0.707 |
| wuzi     | 0.000 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:18:15,305 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:18:15,305 - mmdet - INFO - Epoch(val) [3][288]	bbox_mAP: 0.1630, bbox_mAP_50: 0.3370, bbox_mAP_75: 0.1410, bbox_mAP_s: 0.1010, bbox_mAP_m: 0.1130, bbox_mAP_l: 0.1790, bbox_mAP_copypaste: 0.163 0.337 0.141 0.101 0.113 0.179
2022-09-13 20:18:46,728 - mmdet - INFO - Epoch [4][50/234]	lr: 2.000e-02, eta: 0:17:23, time: 0.625, data_time: 0.064, memory: 9927, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0299, loss_cls: 0.1260, acc: 95.5312, loss_bbox: 0.1439, loss: 0.3124
2022-09-13 20:19:15,400 - mmdet - INFO - Epoch [4][100/234]	lr: 2.000e-02, eta: 0:17:06, time: 0.573, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0066, loss_rpn_bbox: 0.0257, loss_cls: 0.1200, acc: 95.6025, loss_bbox: 0.1421, loss: 0.2944
2022-09-13 20:19:44,229 - mmdet - INFO - Epoch [4][150/234]	lr: 2.000e-02, eta: 0:16:47, time: 0.577, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0174, loss_rpn_bbox: 0.0239, loss_cls: 0.1222, acc: 96.0898, loss_bbox: 0.1294, loss: 0.2930
2022-09-13 20:20:13,201 - mmdet - INFO - Epoch [4][200/234]	lr: 2.000e-02, eta: 0:16:28, time: 0.579, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0148, loss_rpn_bbox: 0.0282, loss_cls: 0.1199, acc: 96.0332, loss_bbox: 0.1313, loss: 0.2942
2022-09-13 20:20:32,456 - mmdet - INFO - Saving checkpoint at 4 epochs
2022-09-13 20:20:57,525 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:20:58,205 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.172
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.393
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.117
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.212
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.172
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.185
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.317
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.317
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.317
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.418
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.276
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.355

2022-09-13 20:20:58,206 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.143 | liewen   | 0.125 | huahen   | 0.211 |
| baidian  | 0.191 | bengque  | 0.054 | zifu     | 0.598 |
| wuzi     | 0.051 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:20:58,216 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:20:58,217 - mmdet - INFO - Epoch(val) [4][288]	bbox_mAP: 0.1720, bbox_mAP_50: 0.3930, bbox_mAP_75: 0.1170, bbox_mAP_s: 0.2120, bbox_mAP_m: 0.1720, bbox_mAP_l: 0.1850, bbox_mAP_copypaste: 0.172 0.393 0.117 0.212 0.172 0.185
2022-09-13 20:21:29,333 - mmdet - INFO - Epoch [5][50/234]	lr: 2.000e-02, eta: 0:15:22, time: 0.619, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0063, loss_rpn_bbox: 0.0258, loss_cls: 0.1144, acc: 95.8721, loss_bbox: 0.1388, loss: 0.2853
2022-09-13 20:21:57,829 - mmdet - INFO - Epoch [5][100/234]	lr: 2.000e-02, eta: 0:15:02, time: 0.570, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0071, loss_rpn_bbox: 0.0206, loss_cls: 0.1167, acc: 95.8848, loss_bbox: 0.1295, loss: 0.2739
2022-09-13 20:22:26,162 - mmdet - INFO - Epoch [5][150/234]	lr: 2.000e-02, eta: 0:14:41, time: 0.567, data_time: 0.016, memory: 9927, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0255, loss_cls: 0.1321, acc: 95.0967, loss_bbox: 0.1593, loss: 0.3239
2022-09-13 20:22:54,700 - mmdet - INFO - Epoch [5][200/234]	lr: 2.000e-02, eta: 0:14:20, time: 0.571, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0253, loss_cls: 0.1128, acc: 95.6650, loss_bbox: 0.1376, loss: 0.2821
2022-09-13 20:23:14,044 - mmdet - INFO - Saving checkpoint at 5 epochs
2022-09-13 20:23:38,342 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:23:38,936 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.197
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.388
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.175
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.235
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.127
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.220
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.346
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.346
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.346
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.408
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.336
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.378

2022-09-13 20:23:38,937 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.128 | liewen   | 0.172 | huahen   | 0.235 |
| baidian  | 0.220 | bengque  | 0.052 | zifu     | 0.769 |
| wuzi     | 0.002 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:23:38,945 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:23:38,946 - mmdet - INFO - Epoch(val) [5][288]	bbox_mAP: 0.1970, bbox_mAP_50: 0.3880, bbox_mAP_75: 0.1750, bbox_mAP_s: 0.2350, bbox_mAP_m: 0.1270, bbox_mAP_l: 0.2200, bbox_mAP_copypaste: 0.197 0.388 0.175 0.235 0.127 0.220
2022-09-13 20:24:10,007 - mmdet - INFO - Epoch [6][50/234]	lr: 2.000e-02, eta: 0:13:20, time: 0.618, data_time: 0.064, memory: 9927, loss_rpn_cls: 0.0059, loss_rpn_bbox: 0.0210, loss_cls: 0.1227, acc: 95.4873, loss_bbox: 0.1421, loss: 0.2917
2022-09-13 20:24:38,736 - mmdet - INFO - Epoch [6][100/234]	lr: 2.000e-02, eta: 0:12:59, time: 0.575, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0063, loss_rpn_bbox: 0.0294, loss_cls: 0.1126, acc: 95.6846, loss_bbox: 0.1530, loss: 0.3012
2022-09-13 20:25:07,112 - mmdet - INFO - Epoch [6][150/234]	lr: 2.000e-02, eta: 0:12:37, time: 0.567, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0062, loss_rpn_bbox: 0.0233, loss_cls: 0.1026, acc: 96.2578, loss_bbox: 0.1241, loss: 0.2562
2022-09-13 20:25:35,749 - mmdet - INFO - Epoch [6][200/234]	lr: 2.000e-02, eta: 0:12:15, time: 0.573, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0055, loss_rpn_bbox: 0.0222, loss_cls: 0.1074, acc: 96.0068, loss_bbox: 0.1295, loss: 0.2645
2022-09-13 20:25:55,143 - mmdet - INFO - Saving checkpoint at 6 epochs
2022-09-13 20:26:16,151 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:26:16,753 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.234
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.424
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.222
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.259
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.162
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.275
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.354
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.354
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.354
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.424
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.275
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.417

2022-09-13 20:26:16,754 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.184 | liewen   | 0.191 | huahen   | 0.325 |
| baidian  | 0.182 | bengque  | 0.179 | zifu     | 0.808 |
| wuzi     | 0.000 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:26:16,766 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:26:16,766 - mmdet - INFO - Epoch(val) [6][288]	bbox_mAP: 0.2340, bbox_mAP_50: 0.4240, bbox_mAP_75: 0.2220, bbox_mAP_s: 0.2590, bbox_mAP_m: 0.1620, bbox_mAP_l: 0.2750, bbox_mAP_copypaste: 0.234 0.424 0.222 0.259 0.162 0.275
2022-09-13 20:26:47,629 - mmdet - INFO - Epoch [7][50/234]	lr: 2.000e-02, eta: 0:11:21, time: 0.614, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0051, loss_rpn_bbox: 0.0207, loss_cls: 0.1062, acc: 95.9824, loss_bbox: 0.1410, loss: 0.2729
2022-09-13 20:27:15,963 - mmdet - INFO - Epoch [7][100/234]	lr: 2.000e-02, eta: 0:10:58, time: 0.567, data_time: 0.016, memory: 9927, loss_rpn_cls: 0.0060, loss_rpn_bbox: 0.0226, loss_cls: 0.1126, acc: 95.8145, loss_bbox: 0.1384, loss: 0.2796
2022-09-13 20:27:44,422 - mmdet - INFO - Epoch [7][150/234]	lr: 2.000e-02, eta: 0:10:36, time: 0.569, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0060, loss_rpn_bbox: 0.0245, loss_cls: 0.0920, acc: 96.4014, loss_bbox: 0.1200, loss: 0.2424
2022-09-13 20:28:13,092 - mmdet - INFO - Epoch [7][200/234]	lr: 2.000e-02, eta: 0:10:13, time: 0.573, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0060, loss_rpn_bbox: 0.0249, loss_cls: 0.1075, acc: 95.9902, loss_bbox: 0.1432, loss: 0.2816
2022-09-13 20:28:32,329 - mmdet - INFO - Saving checkpoint at 7 epochs
2022-09-13 20:28:53,615 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:28:54,016 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.225
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.438
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.204
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.183
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.142
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.291
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.364
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.364
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.364
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.418
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.277
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.453

2022-09-13 20:28:54,017 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.158 | liewen   | 0.211 | huahen   | 0.243 |
| baidian  | 0.183 | bengque  | 0.178 | zifu     | 0.790 |
| wuzi     | 0.034 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:28:54,023 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:28:54,023 - mmdet - INFO - Epoch(val) [7][288]	bbox_mAP: 0.2250, bbox_mAP_50: 0.4380, bbox_mAP_75: 0.2040, bbox_mAP_s: 0.1830, bbox_mAP_m: 0.1420, bbox_mAP_l: 0.2910, bbox_mAP_copypaste: 0.225 0.438 0.204 0.183 0.142 0.291
2022-09-13 20:29:24,952 - mmdet - INFO - Epoch [8][50/234]	lr: 2.000e-02, eta: 0:09:22, time: 0.615, data_time: 0.064, memory: 9927, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0208, loss_cls: 0.0870, acc: 96.6191, loss_bbox: 0.1213, loss: 0.2336
2022-09-13 20:29:53,437 - mmdet - INFO - Epoch [8][100/234]	lr: 2.000e-02, eta: 0:08:59, time: 0.570, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0211, loss_cls: 0.0929, acc: 96.4609, loss_bbox: 0.1347, loss: 0.2532
2022-09-13 20:30:22,071 - mmdet - INFO - Epoch [8][150/234]	lr: 2.000e-02, eta: 0:08:36, time: 0.573, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0249, loss_cls: 0.0984, acc: 96.2705, loss_bbox: 0.1417, loss: 0.2699
2022-09-13 20:30:50,483 - mmdet - INFO - Epoch [8][200/234]	lr: 2.000e-02, eta: 0:08:12, time: 0.568, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0217, loss_cls: 0.1029, acc: 96.1328, loss_bbox: 0.1381, loss: 0.2673
2022-09-13 20:31:09,801 - mmdet - INFO - Saving checkpoint at 8 epochs
2022-09-13 20:31:31,059 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:31:31,393 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.232
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.456
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.185
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.154
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.221
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.269
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.344
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.344
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.344
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.234
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.271
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.400

2022-09-13 20:31:31,394 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.187 | liewen   | 0.198 | huahen   | 0.266 |
| baidian  | 0.171 | bengque  | 0.243 | zifu     | 0.787 |
| wuzi     | 0.000 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:31:31,398 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:31:31,398 - mmdet - INFO - Epoch(val) [8][288]	bbox_mAP: 0.2320, bbox_mAP_50: 0.4560, bbox_mAP_75: 0.1850, bbox_mAP_s: 0.1540, bbox_mAP_m: 0.2210, bbox_mAP_l: 0.2690, bbox_mAP_copypaste: 0.232 0.456 0.185 0.154 0.221 0.269
2022-09-13 20:32:02,160 - mmdet - INFO - Epoch [9][50/234]	lr: 2.000e-03, eta: 0:07:24, time: 0.612, data_time: 0.063, memory: 9927, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0197, loss_cls: 0.0864, acc: 96.6045, loss_bbox: 0.1263, loss: 0.2361
2022-09-13 20:32:30,755 - mmdet - INFO - Epoch [9][100/234]	lr: 2.000e-03, eta: 0:07:00, time: 0.572, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0192, loss_cls: 0.0723, acc: 97.1270, loss_bbox: 0.1115, loss: 0.2059
2022-09-13 20:32:59,237 - mmdet - INFO - Epoch [9][150/234]	lr: 2.000e-03, eta: 0:06:36, time: 0.570, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0161, loss_cls: 0.0739, acc: 97.0273, loss_bbox: 0.1150, loss: 0.2071
2022-09-13 20:33:27,868 - mmdet - INFO - Epoch [9][200/234]	lr: 2.000e-03, eta: 0:06:12, time: 0.573, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0173, loss_cls: 0.0778, acc: 96.9277, loss_bbox: 0.1181, loss: 0.2159
2022-09-13 20:33:47,028 - mmdet - INFO - Saving checkpoint at 9 epochs
2022-09-13 20:34:07,852 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:34:08,362 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.273
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.499
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.245
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.249
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.210
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.370
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.534
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.344
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.511

2022-09-13 20:34:08,363 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.211 | liewen   | 0.238 | huahen   | 0.335 |
| baidian  | 0.214 | bengque  | 0.270 | zifu     | 0.830 |
| wuzi     | 0.083 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:34:08,369 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:34:08,369 - mmdet - INFO - Epoch(val) [9][288]	bbox_mAP: 0.2730, bbox_mAP_50: 0.4990, bbox_mAP_75: 0.2450, bbox_mAP_s: 0.2490, bbox_mAP_m: 0.2100, bbox_mAP_l: 0.3700, bbox_mAP_copypaste: 0.273 0.499 0.245 0.249 0.210 0.370
2022-09-13 20:34:39,200 - mmdet - INFO - Epoch [10][50/234]	lr: 2.000e-03, eta: 0:05:26, time: 0.613, data_time: 0.065, memory: 9927, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0171, loss_cls: 0.0689, acc: 97.2266, loss_bbox: 0.1101, loss: 0.1986
2022-09-13 20:35:07,704 - mmdet - INFO - Epoch [10][100/234]	lr: 2.000e-03, eta: 0:05:02, time: 0.570, data_time: 0.019, memory: 9927, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0164, loss_cls: 0.0716, acc: 97.1504, loss_bbox: 0.1146, loss: 0.2054
2022-09-13 20:35:35,986 - mmdet - INFO - Epoch [10][150/234]	lr: 2.000e-03, eta: 0:04:38, time: 0.566, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0201, loss_cls: 0.0787, acc: 96.8594, loss_bbox: 0.1217, loss: 0.2244
2022-09-13 20:36:04,177 - mmdet - INFO - Epoch [10][200/234]	lr: 2.000e-03, eta: 0:04:13, time: 0.564, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0170, loss_cls: 0.0801, acc: 96.7139, loss_bbox: 0.1302, loss: 0.2300
2022-09-13 20:36:23,596 - mmdet - INFO - Saving checkpoint at 10 epochs
2022-09-13 20:36:44,532 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:36:44,922 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.293
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.532
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.263
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.255
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.230
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.390
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.424
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.424
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.424
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.534
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.337
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.526

2022-09-13 20:36:44,923 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.186 | liewen   | 0.230 | huahen   | 0.346 |
| baidian  | 0.204 | bengque  | 0.268 | zifu     | 0.865 |
| wuzi     | 0.241 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:36:44,928 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:36:44,929 - mmdet - INFO - Epoch(val) [10][288]	bbox_mAP: 0.2930, bbox_mAP_50: 0.5320, bbox_mAP_75: 0.2630, bbox_mAP_s: 0.2550, bbox_mAP_m: 0.2300, bbox_mAP_l: 0.3900, bbox_mAP_copypaste: 0.293 0.532 0.263 0.255 0.230 0.390
2022-09-13 20:37:15,905 - mmdet - INFO - Epoch [11][50/234]	lr: 2.000e-03, eta: 0:03:29, time: 0.616, data_time: 0.064, memory: 9927, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0192, loss_cls: 0.0753, acc: 96.9707, loss_bbox: 0.1204, loss: 0.2176
2022-09-13 20:37:44,522 - mmdet - INFO - Epoch [11][100/234]	lr: 2.000e-03, eta: 0:03:04, time: 0.572, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0207, loss_cls: 0.0729, acc: 97.0098, loss_bbox: 0.1216, loss: 0.2176
2022-09-13 20:38:12,954 - mmdet - INFO - Epoch [11][150/234]	lr: 2.000e-03, eta: 0:02:40, time: 0.569, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0129, loss_cls: 0.0572, acc: 97.6338, loss_bbox: 0.0976, loss: 0.1693
2022-09-13 20:38:41,344 - mmdet - INFO - Epoch [11][200/234]	lr: 2.000e-03, eta: 0:02:15, time: 0.568, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0157, loss_cls: 0.0681, acc: 97.2197, loss_bbox: 0.1061, loss: 0.1921
2022-09-13 20:39:00,643 - mmdet - INFO - Saving checkpoint at 11 epochs
2022-09-13 20:39:21,645 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:39:22,110 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.284
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.520
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.265
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.241
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.368
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.411
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.411
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.411
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.531
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.340
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.499

2022-09-13 20:39:22,111 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.198 | liewen   | 0.229 | huahen   | 0.347 |
| baidian  | 0.213 | bengque  | 0.256 | zifu     | 0.830 |
| wuzi     | 0.197 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:39:22,115 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:39:22,115 - mmdet - INFO - Epoch(val) [11][288]	bbox_mAP: 0.2840, bbox_mAP_50: 0.5200, bbox_mAP_75: 0.2650, bbox_mAP_s: 0.2410, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.3680, bbox_mAP_copypaste: 0.284 0.520 0.265 0.241 0.217 0.368
2022-09-13 20:39:53,093 - mmdet - INFO - Epoch [12][50/234]	lr: 2.000e-04, eta: 0:01:32, time: 0.616, data_time: 0.065, memory: 9927, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0167, loss_cls: 0.0714, acc: 97.1582, loss_bbox: 0.1164, loss: 0.2065
2022-09-13 20:40:21,495 - mmdet - INFO - Epoch [12][100/234]	lr: 2.000e-04, eta: 0:01:07, time: 0.568, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0140, loss_cls: 0.0559, acc: 97.7666, loss_bbox: 0.0972, loss: 0.1691
2022-09-13 20:40:50,003 - mmdet - INFO - Epoch [12][150/234]	lr: 2.000e-04, eta: 0:00:42, time: 0.570, data_time: 0.018, memory: 9927, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0175, loss_cls: 0.0672, acc: 97.3350, loss_bbox: 0.1087, loss: 0.1958
2022-09-13 20:41:18,362 - mmdet - INFO - Epoch [12][200/234]	lr: 2.000e-04, eta: 0:00:17, time: 0.567, data_time: 0.017, memory: 9927, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0169, loss_cls: 0.0660, acc: 97.2725, loss_bbox: 0.1138, loss: 0.1995
2022-09-13 20:41:37,629 - mmdet - INFO - Saving checkpoint at 12 epochs
2022-09-13 20:42:01,460 - mmdet - INFO - Evaluating bbox...
2022-09-13 20:42:01,819 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.276
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.507
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.245
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.246
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.229
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.380
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.430
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.430
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.430
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.532
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.401
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.511

2022-09-13 20:42:01,820 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.215 | liewen   | 0.232 | huahen   | 0.348 |
| baidian  | 0.205 | bengque  | 0.271 | zifu     | 0.841 |
| wuzi     | 0.098 | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 20:42:01,825 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn.py
2022-09-13 20:42:01,825 - mmdet - INFO - Epoch(val) [12][288]	bbox_mAP: 0.2760, bbox_mAP_50: 0.5070, bbox_mAP_75: 0.2450, bbox_mAP_s: 0.2460, bbox_mAP_m: 0.2290, bbox_mAP_l: 0.3800, bbox_mAP_copypaste: 0.276 0.507 0.245 0.246 0.229 0.380
