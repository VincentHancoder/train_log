2022-09-13 21:00:12,307 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.7 (default, May  7 2020, 21:25:33) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: GeForce RTX 3090
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.0, V11.0.194
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.7.0+cu110
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80
  - CuDNN 8.0.4
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.1+cu110
OpenCV: 4.6.0
MMCV: 1.6.1
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.25.1+df28da9
------------------------------------------------------------

2022-09-13 21:00:12,746 - mmdet - INFO - Distributed training: False
2022-09-13 21:00:13,162 - mmdet - INFO - Config:
dataset_type = 'CocoDataset'
data_root = '/home/hhn/mmdetection/20220830'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1500, 1000), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1500, 1000),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/train1.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1500, 1000), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/val1.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1500, 1000),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='/home/hhn/mmdetection/20220830/annotations_lb201/val1.json',
        img_prefix='/home/hhn/mmdetection/20220830/lb201/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1500, 1000),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=12)
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/hhn/mmdetection/pretrained/cascade_rcnn_r50_fpn_1x_coco_20200316-3dc56deb.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=8)
model = dict(
    type='CascadeRCNN',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=None),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(
            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),
    roi_head=dict(
        type='CascadeRoIHead',
        num_stages=3,
        stage_loss_weights=[1, 0.5, 0.25],
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=[
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=8,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.1, 0.1, 0.2, 0.2]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,
                               loss_weight=1.0)),
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=8,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.05, 0.05, 0.1, 0.1]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,
                               loss_weight=1.0)),
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=8,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.033, 0.033, 0.067, 0.067]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))
        ]),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=0,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=2000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=[
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.5,
                    neg_iou_thr=0.5,
                    min_pos_iou=0.5,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.6,
                    neg_iou_thr=0.6,
                    min_pos_iou=0.6,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.7,
                    neg_iou_thr=0.7,
                    min_pos_iou=0.7,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False)
        ]),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
work_dir = './work_dirs/cascade_rcnn_r50_fpn'
auto_resume = False
gpu_ids = [0]

2022-09-13 21:00:13,163 - mmdet - INFO - Set random seed to 1103172735, deterministic: False
2022-09-13 21:00:13,733 - mmdet - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': 'Conv2d'}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2022-09-13 21:00:14,009 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,011 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,013 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,017 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,022 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,028 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,031 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,040 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,043 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,045 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,048 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,050 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,052 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,060 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,063 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,066 - mmdet - INFO - initialize Bottleneck with init_cfg {'type': 'Constant', 'val': 0, 'override': {'name': 'norm3'}}
2022-09-13 21:00:14,087 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2022-09-13 21:00:14,122 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2022-09-13 21:00:14,129 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2022-09-13 21:00:14,308 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2022-09-13 21:00:14,470 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
ConstantInit: val=0, bias=0 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
ConstantInit: val=0, bias=0 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
ConstantInit: val=0, bias=0 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
ConstantInit: val=0, bias=0 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of CascadeRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.0.fc_cls.weight - torch.Size([9, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.0.fc_cls.bias - torch.Size([9]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.0.fc_reg.weight - torch.Size([4, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.0.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.0.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.0.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.0.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.0.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.1.fc_cls.weight - torch.Size([9, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.1.fc_cls.bias - torch.Size([9]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.1.fc_reg.weight - torch.Size([4, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.1.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.1.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.1.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.1.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.1.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.2.fc_cls.weight - torch.Size([9, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.2.fc_cls.bias - torch.Size([9]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.2.fc_reg.weight - torch.Size([4, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.2.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.2.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.2.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.2.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.2.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2022-09-13 21:00:18,098 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2022-09-13 21:00:18,109 - mmdet - INFO - load checkpoint from local path: /home/hhn/mmdetection/pretrained/cascade_rcnn_r50_fpn_1x_coco_20200316-3dc56deb.pth
2022-09-13 21:00:18,304 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for roi_head.bbox_head.0.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([9, 1024]).
size mismatch for roi_head.bbox_head.0.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([9]).
size mismatch for roi_head.bbox_head.1.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([9, 1024]).
size mismatch for roi_head.bbox_head.1.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([9]).
size mismatch for roi_head.bbox_head.2.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([9, 1024]).
size mismatch for roi_head.bbox_head.2.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([9]).
2022-09-13 21:00:18,316 - mmdet - INFO - Start running, host: hhn@cv-8k3090, work_dir: /home/hhn/mmdetection/work_dirs/cascade_rcnn_r50_fpn
2022-09-13 21:00:18,317 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2022-09-13 21:00:18,317 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2022-09-13 21:00:18,317 - mmdet - INFO - Checkpoints will be saved to /home/hhn/mmdetection/work_dirs/cascade_rcnn_r50_fpn by HardDiskBackend.
2022-09-13 21:00:53,776 - mmdet - INFO - Epoch [1][50/231]	lr: 1.978e-03, eta: 0:32:02, time: 0.706, data_time: 0.063, memory: 10249, loss_rpn_cls: 0.0856, loss_rpn_bbox: 0.0187, s0.loss_cls: 0.5695, s0.acc: 88.5137, s0.loss_bbox: 0.0763, s1.loss_cls: 0.3304, s1.acc: 84.1426, s1.loss_bbox: 0.0648, s2.loss_cls: 0.1621, s2.acc: 82.5391, s2.loss_bbox: 0.0226, loss: 1.3300
2022-09-13 21:01:26,947 - mmdet - INFO - Epoch [1][100/231]	lr: 3.976e-03, eta: 0:30:29, time: 0.663, data_time: 0.015, memory: 10249, loss_rpn_cls: 0.0138, loss_rpn_bbox: 0.0160, s0.loss_cls: 0.2207, s0.acc: 93.2598, s0.loss_bbox: 0.0862, s1.loss_cls: 0.1315, s1.acc: 92.2078, s1.loss_bbox: 0.0990, s2.loss_cls: 0.0648, s2.acc: 93.6253, s2.loss_bbox: 0.0454, loss: 0.6774
2022-09-13 21:02:00,552 - mmdet - INFO - Epoch [1][150/231]	lr: 5.974e-03, eta: 0:29:44, time: 0.672, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0128, loss_rpn_bbox: 0.0186, s0.loss_cls: 0.1808, s0.acc: 94.3564, s0.loss_bbox: 0.0832, s1.loss_cls: 0.1009, s1.acc: 93.4811, s1.loss_bbox: 0.0938, s2.loss_cls: 0.0526, s2.acc: 93.7103, s2.loss_bbox: 0.0433, loss: 0.5861
2022-09-13 21:02:34,491 - mmdet - INFO - Epoch [1][200/231]	lr: 7.972e-03, eta: 0:29:09, time: 0.679, data_time: 0.016, memory: 10249, loss_rpn_cls: 0.0103, loss_rpn_bbox: 0.0176, s0.loss_cls: 0.1463, s0.acc: 95.4785, s0.loss_bbox: 0.0724, s1.loss_cls: 0.0830, s1.acc: 94.8809, s1.loss_bbox: 0.0822, s2.loss_cls: 0.0416, s2.acc: 95.1982, s2.loss_bbox: 0.0379, loss: 0.4912
2022-09-13 21:02:55,342 - mmdet - INFO - Saving checkpoint at 1 epochs
2022-09-13 21:03:24,376 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:03:24,801 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.213
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.377
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.196
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.163
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.116
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.218
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.378
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.378
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.378
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.519
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.253
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.366

2022-09-13 21:03:24,802 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.045 | liewen   | 0.096 | huahen   | 0.299 |
| baidian  | 0.225 | bengque  | 0.055 | zifu     | 0.774 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:03:24,809 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:03:24,809 - mmdet - INFO - Epoch(val) [1][288]	bbox_mAP: 0.2130, bbox_mAP_50: 0.3770, bbox_mAP_75: 0.1960, bbox_mAP_s: 0.1630, bbox_mAP_m: 0.1160, bbox_mAP_l: 0.2180, bbox_mAP_copypaste: 0.213 0.377 0.196 0.163 0.116 0.218
2022-09-13 21:04:00,520 - mmdet - INFO - Epoch [2][50/231]	lr: 1.121e-02, eta: 0:25:20, time: 0.711, data_time: 0.062, memory: 10249, loss_rpn_cls: 0.0138, loss_rpn_bbox: 0.0179, s0.loss_cls: 0.1344, s0.acc: 95.4717, s0.loss_bbox: 0.0803, s1.loss_cls: 0.0727, s1.acc: 94.9040, s1.loss_bbox: 0.0905, s2.loss_cls: 0.0368, s2.acc: 94.6277, s2.loss_bbox: 0.0413, loss: 0.4875
2022-09-13 21:04:34,345 - mmdet - INFO - Epoch [2][100/231]	lr: 1.321e-02, eta: 0:25:14, time: 0.676, data_time: 0.016, memory: 10249, loss_rpn_cls: 0.0110, loss_rpn_bbox: 0.0202, s0.loss_cls: 0.1235, s0.acc: 95.5303, s0.loss_bbox: 0.0747, s1.loss_cls: 0.0683, s1.acc: 94.8916, s1.loss_bbox: 0.0903, s2.loss_cls: 0.0335, s2.acc: 95.0545, s2.loss_bbox: 0.0424, loss: 0.4639
2022-09-13 21:05:07,441 - mmdet - INFO - Epoch [2][150/231]	lr: 1.520e-02, eta: 0:24:56, time: 0.662, data_time: 0.016, memory: 10249, loss_rpn_cls: 0.0133, loss_rpn_bbox: 0.0187, s0.loss_cls: 0.1217, s0.acc: 95.8125, s0.loss_bbox: 0.0717, s1.loss_cls: 0.0632, s1.acc: 95.4997, s1.loss_bbox: 0.0799, s2.loss_cls: 0.0309, s2.acc: 95.8429, s2.loss_bbox: 0.0372, loss: 0.4366
2022-09-13 21:05:40,392 - mmdet - INFO - Epoch [2][200/231]	lr: 1.720e-02, eta: 0:24:34, time: 0.659, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0147, loss_rpn_bbox: 0.0147, s0.loss_cls: 0.1141, s0.acc: 96.2822, s0.loss_bbox: 0.0642, s1.loss_cls: 0.0608, s1.acc: 95.8652, s1.loss_bbox: 0.0692, s2.loss_cls: 0.0294, s2.acc: 96.1777, s2.loss_bbox: 0.0334, loss: 0.4004
2022-09-13 21:06:01,151 - mmdet - INFO - Saving checkpoint at 2 epochs
2022-09-13 21:06:31,087 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:06:31,794 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.227
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.405
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.212
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.094
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.127
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.240
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.435
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.435
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.435
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.169
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.304
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.480

2022-09-13 21:06:31,795 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.223 | liewen   | 0.119 | huahen   | 0.288 |
| baidian  | 0.188 | bengque  | 0.040 | zifu     | 0.730 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:06:31,807 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:06:31,807 - mmdet - INFO - Epoch(val) [2][288]	bbox_mAP: 0.2270, bbox_mAP_50: 0.4050, bbox_mAP_75: 0.2120, bbox_mAP_s: 0.0940, bbox_mAP_m: 0.1270, bbox_mAP_l: 0.2400, bbox_mAP_copypaste: 0.227 0.405 0.212 0.094 0.127 0.240
2022-09-13 21:07:07,563 - mmdet - INFO - Epoch [3][50/231]	lr: 2.000e-02, eta: 0:22:35, time: 0.712, data_time: 0.063, memory: 10249, loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0183, s0.loss_cls: 0.1131, s0.acc: 95.9541, s0.loss_bbox: 0.0686, s1.loss_cls: 0.0642, s1.acc: 95.2388, s1.loss_bbox: 0.0880, s2.loss_cls: 0.0327, s2.acc: 95.2760, s2.loss_bbox: 0.0443, loss: 0.4368
2022-09-13 21:07:40,865 - mmdet - INFO - Epoch [3][100/231]	lr: 2.000e-02, eta: 0:22:18, time: 0.666, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0185, s0.loss_cls: 0.1203, s0.acc: 95.7324, s0.loss_bbox: 0.0749, s1.loss_cls: 0.0663, s1.acc: 94.9947, s1.loss_bbox: 0.0891, s2.loss_cls: 0.0312, s2.acc: 95.4782, s2.loss_bbox: 0.0427, loss: 0.4556
2022-09-13 21:08:14,207 - mmdet - INFO - Epoch [3][150/231]	lr: 2.000e-02, eta: 0:21:58, time: 0.667, data_time: 0.016, memory: 10249, loss_rpn_cls: 0.0108, loss_rpn_bbox: 0.0156, s0.loss_cls: 0.1239, s0.acc: 95.7812, s0.loss_bbox: 0.0692, s1.loss_cls: 0.0660, s1.acc: 95.3201, s1.loss_bbox: 0.0783, s2.loss_cls: 0.0310, s2.acc: 95.6300, s2.loss_bbox: 0.0415, loss: 0.4363
2022-09-13 21:08:47,540 - mmdet - INFO - Epoch [3][200/231]	lr: 2.000e-02, eta: 0:21:37, time: 0.667, data_time: 0.016, memory: 10249, loss_rpn_cls: 0.0100, loss_rpn_bbox: 0.0173, s0.loss_cls: 0.1256, s0.acc: 95.6592, s0.loss_bbox: 0.0725, s1.loss_cls: 0.0672, s1.acc: 95.2295, s1.loss_bbox: 0.0881, s2.loss_cls: 0.0320, s2.acc: 95.1249, s2.loss_bbox: 0.0426, loss: 0.4554
2022-09-13 21:09:08,417 - mmdet - INFO - Saving checkpoint at 3 epochs
2022-09-13 21:09:37,885 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:09:38,332 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.267
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.469
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.251
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.201
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.145
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.299
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.457
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.457
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.457
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.459
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.336
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.464

2022-09-13 21:09:38,333 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.234 | liewen   | 0.147 | huahen   | 0.288 |
| baidian  | 0.289 | bengque  | 0.065 | zifu     | 0.843 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:09:38,343 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:09:38,343 - mmdet - INFO - Epoch(val) [3][288]	bbox_mAP: 0.2670, bbox_mAP_50: 0.4690, bbox_mAP_75: 0.2510, bbox_mAP_s: 0.2010, bbox_mAP_m: 0.1450, bbox_mAP_l: 0.2990, bbox_mAP_copypaste: 0.267 0.469 0.251 0.201 0.145 0.299
2022-09-13 21:10:14,099 - mmdet - INFO - Epoch [4][50/231]	lr: 2.000e-02, eta: 0:20:08, time: 0.712, data_time: 0.063, memory: 10249, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0169, s0.loss_cls: 0.1046, s0.acc: 96.0820, s0.loss_bbox: 0.0679, s1.loss_cls: 0.0572, s1.acc: 95.5595, s1.loss_bbox: 0.0841, s2.loss_cls: 0.0296, s2.acc: 95.3733, s2.loss_bbox: 0.0441, loss: 0.4131
2022-09-13 21:10:47,543 - mmdet - INFO - Epoch [4][100/231]	lr: 2.000e-02, eta: 0:19:48, time: 0.669, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0089, loss_rpn_bbox: 0.0174, s0.loss_cls: 0.1055, s0.acc: 96.1250, s0.loss_bbox: 0.0722, s1.loss_cls: 0.0602, s1.acc: 95.6147, s1.loss_bbox: 0.0903, s2.loss_cls: 0.0309, s2.acc: 95.5686, s2.loss_bbox: 0.0480, loss: 0.4332
2022-09-13 21:11:20,684 - mmdet - INFO - Epoch [4][150/231]	lr: 2.000e-02, eta: 0:19:25, time: 0.663, data_time: 0.018, memory: 10249, loss_rpn_cls: 0.0073, loss_rpn_bbox: 0.0141, s0.loss_cls: 0.1039, s0.acc: 96.3350, s0.loss_bbox: 0.0654, s1.loss_cls: 0.0588, s1.acc: 95.7695, s1.loss_bbox: 0.0797, s2.loss_cls: 0.0290, s2.acc: 95.7666, s2.loss_bbox: 0.0445, loss: 0.4025
2022-09-13 21:11:54,684 - mmdet - INFO - Epoch [4][200/231]	lr: 2.000e-02, eta: 0:19:02, time: 0.680, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0180, s0.loss_cls: 0.1040, s0.acc: 96.2959, s0.loss_bbox: 0.0687, s1.loss_cls: 0.0613, s1.acc: 95.3266, s1.loss_bbox: 0.0859, s2.loss_cls: 0.0310, s2.acc: 95.2889, s2.loss_bbox: 0.0427, loss: 0.4191
2022-09-13 21:12:15,424 - mmdet - INFO - Saving checkpoint at 4 epochs
2022-09-13 21:12:45,889 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:12:46,497 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.238
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.452
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.212
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.159
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.122
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.258
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.384
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.384
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.384
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.275
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.282
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.390

2022-09-13 21:12:46,497 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.089 | liewen   | 0.145 | huahen   | 0.330 |
| baidian  | 0.225 | bengque  | 0.088 | zifu     | 0.785 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:12:46,507 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:12:46,507 - mmdet - INFO - Epoch(val) [4][288]	bbox_mAP: 0.2380, bbox_mAP_50: 0.4520, bbox_mAP_75: 0.2120, bbox_mAP_s: 0.1590, bbox_mAP_m: 0.1220, bbox_mAP_l: 0.2580, bbox_mAP_copypaste: 0.238 0.452 0.212 0.159 0.122 0.258
2022-09-13 21:13:22,812 - mmdet - INFO - Epoch [5][50/231]	lr: 2.000e-02, eta: 0:17:49, time: 0.723, data_time: 0.063, memory: 10249, loss_rpn_cls: 0.0080, loss_rpn_bbox: 0.0162, s0.loss_cls: 0.0906, s0.acc: 96.6982, s0.loss_bbox: 0.0620, s1.loss_cls: 0.0498, s1.acc: 96.3136, s1.loss_bbox: 0.0794, s2.loss_cls: 0.0260, s2.acc: 96.1039, s2.loss_bbox: 0.0436, loss: 0.3756
2022-09-13 21:13:56,455 - mmdet - INFO - Epoch [5][100/231]	lr: 2.000e-02, eta: 0:17:26, time: 0.673, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0101, loss_rpn_bbox: 0.0183, s0.loss_cls: 0.1020, s0.acc: 96.0537, s0.loss_bbox: 0.0719, s1.loss_cls: 0.0582, s1.acc: 95.3870, s1.loss_bbox: 0.0912, s2.loss_cls: 0.0302, s2.acc: 95.1621, s2.loss_bbox: 0.0478, loss: 0.4297
2022-09-13 21:14:29,653 - mmdet - INFO - Epoch [5][150/231]	lr: 2.000e-02, eta: 0:17:01, time: 0.664, data_time: 0.018, memory: 10249, loss_rpn_cls: 0.0067, loss_rpn_bbox: 0.0145, s0.loss_cls: 0.0868, s0.acc: 96.6182, s0.loss_bbox: 0.0611, s1.loss_cls: 0.0486, s1.acc: 96.3943, s1.loss_bbox: 0.0806, s2.loss_cls: 0.0261, s2.acc: 95.8788, s2.loss_bbox: 0.0454, loss: 0.3697
2022-09-13 21:15:03,273 - mmdet - INFO - Epoch [5][200/231]	lr: 2.000e-02, eta: 0:16:36, time: 0.672, data_time: 0.019, memory: 10249, loss_rpn_cls: 0.0065, loss_rpn_bbox: 0.0147, s0.loss_cls: 0.1033, s0.acc: 96.2549, s0.loss_bbox: 0.0666, s1.loss_cls: 0.0584, s1.acc: 95.6599, s1.loss_bbox: 0.0886, s2.loss_cls: 0.0304, s2.acc: 95.2021, s2.loss_bbox: 0.0466, loss: 0.4152
2022-09-13 21:15:23,822 - mmdet - INFO - Saving checkpoint at 5 epochs
2022-09-13 21:15:55,047 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:15:55,517 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.344
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.579
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.331
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.285
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.160
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.392
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.488
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.488
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.488
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.442
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.359
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.522

2022-09-13 21:15:55,518 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.552 | liewen   | 0.164 | huahen   | 0.317 |
| baidian  | 0.231 | bengque  | 0.293 | zifu     | 0.853 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:15:55,524 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:15:55,524 - mmdet - INFO - Epoch(val) [5][288]	bbox_mAP: 0.3440, bbox_mAP_50: 0.5790, bbox_mAP_75: 0.3310, bbox_mAP_s: 0.2850, bbox_mAP_m: 0.1600, bbox_mAP_l: 0.3920, bbox_mAP_copypaste: 0.344 0.579 0.331 0.285 0.160 0.392
2022-09-13 21:16:31,353 - mmdet - INFO - Epoch [6][50/231]	lr: 2.000e-02, eta: 0:15:30, time: 0.713, data_time: 0.064, memory: 10249, loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0156, s0.loss_cls: 0.0963, s0.acc: 96.3555, s0.loss_bbox: 0.0683, s1.loss_cls: 0.0554, s1.acc: 95.6571, s1.loss_bbox: 0.0958, s2.loss_cls: 0.0303, s2.acc: 94.9426, s2.loss_bbox: 0.0541, loss: 0.4223
2022-09-13 21:17:04,827 - mmdet - INFO - Epoch [6][100/231]	lr: 2.000e-02, eta: 0:15:05, time: 0.669, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0061, loss_rpn_bbox: 0.0176, s0.loss_cls: 0.0915, s0.acc: 96.6338, s0.loss_bbox: 0.0616, s1.loss_cls: 0.0538, s1.acc: 96.0107, s1.loss_bbox: 0.0842, s2.loss_cls: 0.0288, s2.acc: 95.4803, s2.loss_bbox: 0.0453, loss: 0.3889
2022-09-13 21:17:38,438 - mmdet - INFO - Epoch [6][150/231]	lr: 2.000e-02, eta: 0:14:39, time: 0.672, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0071, loss_rpn_bbox: 0.0173, s0.loss_cls: 0.0906, s0.acc: 96.6523, s0.loss_bbox: 0.0648, s1.loss_cls: 0.0508, s1.acc: 96.0347, s1.loss_bbox: 0.0866, s2.loss_cls: 0.0269, s2.acc: 95.6122, s2.loss_bbox: 0.0481, loss: 0.3921
2022-09-13 21:18:11,866 - mmdet - INFO - Epoch [6][200/231]	lr: 2.000e-02, eta: 0:14:13, time: 0.669, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0143, s0.loss_cls: 0.0880, s0.acc: 96.6475, s0.loss_bbox: 0.0579, s1.loss_cls: 0.0499, s1.acc: 96.1729, s1.loss_bbox: 0.0775, s2.loss_cls: 0.0260, s2.acc: 95.8994, s2.loss_bbox: 0.0428, loss: 0.3643
2022-09-13 21:18:32,518 - mmdet - INFO - Saving checkpoint at 6 epochs
2022-09-13 21:19:02,671 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:19:03,253 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.305
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.558
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.274
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.310
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.165
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.319
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.474
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.474
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.474
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.410
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.353
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.489

2022-09-13 21:19:03,254 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.316 | liewen   | 0.192 | huahen   | 0.355 |
| baidian  | 0.232 | bengque  | 0.218 | zifu     | 0.824 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:19:03,261 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:19:03,261 - mmdet - INFO - Epoch(val) [6][288]	bbox_mAP: 0.3050, bbox_mAP_50: 0.5580, bbox_mAP_75: 0.2740, bbox_mAP_s: 0.3100, bbox_mAP_m: 0.1650, bbox_mAP_l: 0.3190, bbox_mAP_copypaste: 0.305 0.558 0.274 0.310 0.165 0.319
2022-09-13 21:19:39,256 - mmdet - INFO - Epoch [7][50/231]	lr: 2.000e-02, eta: 0:13:12, time: 0.717, data_time: 0.065, memory: 10249, loss_rpn_cls: 0.0063, loss_rpn_bbox: 0.0156, s0.loss_cls: 0.0910, s0.acc: 96.4053, s0.loss_bbox: 0.0613, s1.loss_cls: 0.0525, s1.acc: 95.7677, s1.loss_bbox: 0.0832, s2.loss_cls: 0.0270, s2.acc: 95.4764, s2.loss_bbox: 0.0461, loss: 0.3830
2022-09-13 21:20:13,059 - mmdet - INFO - Epoch [7][100/231]	lr: 2.000e-02, eta: 0:12:46, time: 0.676, data_time: 0.018, memory: 10249, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0150, s0.loss_cls: 0.0756, s0.acc: 96.9297, s0.loss_bbox: 0.0610, s1.loss_cls: 0.0441, s1.acc: 96.3798, s1.loss_bbox: 0.0814, s2.loss_cls: 0.0237, s2.acc: 96.0378, s2.loss_bbox: 0.0471, loss: 0.3526
2022-09-13 21:20:46,579 - mmdet - INFO - Epoch [7][150/231]	lr: 2.000e-02, eta: 0:12:19, time: 0.670, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0069, loss_rpn_bbox: 0.0135, s0.loss_cls: 0.0881, s0.acc: 96.5488, s0.loss_bbox: 0.0630, s1.loss_cls: 0.0488, s1.acc: 96.1460, s1.loss_bbox: 0.0812, s2.loss_cls: 0.0257, s2.acc: 95.6956, s2.loss_bbox: 0.0495, loss: 0.3768
2022-09-13 21:21:20,209 - mmdet - INFO - Epoch [7][200/231]	lr: 2.000e-02, eta: 0:11:52, time: 0.673, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0146, s0.loss_cls: 0.0793, s0.acc: 97.0508, s0.loss_bbox: 0.0568, s1.loss_cls: 0.0454, s1.acc: 96.5352, s1.loss_bbox: 0.0797, s2.loss_cls: 0.0248, s2.acc: 96.0462, s2.loss_bbox: 0.0474, loss: 0.3536
2022-09-13 21:21:41,142 - mmdet - INFO - Saving checkpoint at 7 epochs
2022-09-13 21:22:10,267 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:22:10,745 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.340
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.576
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.330
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.410
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.172
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.380
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.500
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.500
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.500
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.518
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.335
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.535

2022-09-13 21:22:10,745 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.568 | liewen   | 0.165 | huahen   | 0.364 |
| baidian  | 0.253 | bengque  | 0.198 | zifu     | 0.832 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:22:10,753 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:22:10,753 - mmdet - INFO - Epoch(val) [7][288]	bbox_mAP: 0.3400, bbox_mAP_50: 0.5760, bbox_mAP_75: 0.3300, bbox_mAP_s: 0.4100, bbox_mAP_m: 0.1720, bbox_mAP_l: 0.3800, bbox_mAP_copypaste: 0.340 0.576 0.330 0.410 0.172 0.380
2022-09-13 21:22:49,337 - mmdet - INFO - Epoch [8][50/231]	lr: 2.000e-02, eta: 0:10:57, time: 0.768, data_time: 0.069, memory: 10249, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0152, s0.loss_cls: 0.0765, s0.acc: 97.0020, s0.loss_bbox: 0.0564, s1.loss_cls: 0.0442, s1.acc: 96.3261, s1.loss_bbox: 0.0802, s2.loss_cls: 0.0250, s2.acc: 95.8858, s2.loss_bbox: 0.0486, loss: 0.3508
2022-09-13 21:23:22,665 - mmdet - INFO - Epoch [8][100/231]	lr: 2.000e-02, eta: 0:10:29, time: 0.667, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0128, s0.loss_cls: 0.0742, s0.acc: 97.0342, s0.loss_bbox: 0.0621, s1.loss_cls: 0.0449, s1.acc: 96.3439, s1.loss_bbox: 0.0876, s2.loss_cls: 0.0248, s2.acc: 95.6066, s2.loss_bbox: 0.0493, loss: 0.3595
2022-09-13 21:23:56,201 - mmdet - INFO - Epoch [8][150/231]	lr: 2.000e-02, eta: 0:10:01, time: 0.671, data_time: 0.016, memory: 10249, loss_rpn_cls: 0.0066, loss_rpn_bbox: 0.0160, s0.loss_cls: 0.0763, s0.acc: 96.9434, s0.loss_bbox: 0.0578, s1.loss_cls: 0.0441, s1.acc: 96.3291, s1.loss_bbox: 0.0788, s2.loss_cls: 0.0244, s2.acc: 95.9376, s2.loss_bbox: 0.0473, loss: 0.3512
2022-09-13 21:24:30,342 - mmdet - INFO - Epoch [8][200/231]	lr: 2.000e-02, eta: 0:09:34, time: 0.683, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0139, s0.loss_cls: 0.0831, s0.acc: 96.8047, s0.loss_bbox: 0.0582, s1.loss_cls: 0.0483, s1.acc: 96.3093, s1.loss_bbox: 0.0801, s2.loss_cls: 0.0264, s2.acc: 95.8815, s2.loss_bbox: 0.0465, loss: 0.3619
2022-09-13 21:24:51,015 - mmdet - INFO - Saving checkpoint at 8 epochs
2022-09-13 21:25:22,407 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:25:22,923 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.329
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.536
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.325
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.304
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.159
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.374
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.487
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.487
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.487
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.415
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.260
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.525

2022-09-13 21:25:22,924 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.404 | liewen   | 0.181 | huahen   | 0.325 |
| baidian  | 0.244 | bengque  | 0.291 | zifu     | 0.858 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:25:22,931 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:25:22,931 - mmdet - INFO - Epoch(val) [8][288]	bbox_mAP: 0.3290, bbox_mAP_50: 0.5360, bbox_mAP_75: 0.3250, bbox_mAP_s: 0.3040, bbox_mAP_m: 0.1590, bbox_mAP_l: 0.3740, bbox_mAP_copypaste: 0.329 0.536 0.325 0.304 0.159 0.374
2022-09-13 21:25:58,755 - mmdet - INFO - Epoch [9][50/231]	lr: 2.000e-03, eta: 0:08:39, time: 0.713, data_time: 0.063, memory: 10249, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0094, s0.loss_cls: 0.0628, s0.acc: 97.4375, s0.loss_bbox: 0.0472, s1.loss_cls: 0.0360, s1.acc: 97.1695, s1.loss_bbox: 0.0694, s2.loss_cls: 0.0204, s2.acc: 96.4037, s2.loss_bbox: 0.0438, loss: 0.2926
2022-09-13 21:26:31,979 - mmdet - INFO - Epoch [9][100/231]	lr: 2.000e-03, eta: 0:08:11, time: 0.664, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0106, s0.loss_cls: 0.0568, s0.acc: 97.6523, s0.loss_bbox: 0.0466, s1.loss_cls: 0.0324, s1.acc: 97.3467, s1.loss_bbox: 0.0721, s2.loss_cls: 0.0191, s2.acc: 96.6754, s2.loss_bbox: 0.0485, loss: 0.2896
2022-09-13 21:27:05,397 - mmdet - INFO - Epoch [9][150/231]	lr: 2.000e-03, eta: 0:07:42, time: 0.668, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0107, s0.loss_cls: 0.0576, s0.acc: 97.6748, s0.loss_bbox: 0.0446, s1.loss_cls: 0.0327, s1.acc: 97.4307, s1.loss_bbox: 0.0680, s2.loss_cls: 0.0192, s2.acc: 96.6504, s2.loss_bbox: 0.0449, loss: 0.2814
2022-09-13 21:27:39,082 - mmdet - INFO - Epoch [9][200/231]	lr: 2.000e-03, eta: 0:07:14, time: 0.674, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0111, s0.loss_cls: 0.0578, s0.acc: 97.6953, s0.loss_bbox: 0.0464, s1.loss_cls: 0.0330, s1.acc: 97.4500, s1.loss_bbox: 0.0703, s2.loss_cls: 0.0191, s2.acc: 96.8859, s2.loss_bbox: 0.0473, loss: 0.2896
2022-09-13 21:27:59,963 - mmdet - INFO - Saving checkpoint at 9 epochs
2022-09-13 21:28:28,043 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:28:28,367 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.380
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.607
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.383
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.333
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.221
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.429
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.529
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.529
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.529
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.426
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.373
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.571

2022-09-13 21:28:28,367 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.548 | liewen   | 0.209 | huahen   | 0.395 |
| baidian  | 0.252 | bengque  | 0.385 | zifu     | 0.874 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:28:28,372 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:28:28,372 - mmdet - INFO - Epoch(val) [9][288]	bbox_mAP: 0.3800, bbox_mAP_50: 0.6070, bbox_mAP_75: 0.3830, bbox_mAP_s: 0.3330, bbox_mAP_m: 0.2210, bbox_mAP_l: 0.4290, bbox_mAP_copypaste: 0.380 0.607 0.383 0.333 0.221 0.429
2022-09-13 21:29:04,377 - mmdet - INFO - Epoch [10][50/231]	lr: 2.000e-03, eta: 0:06:21, time: 0.717, data_time: 0.064, memory: 10249, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0093, s0.loss_cls: 0.0515, s0.acc: 97.8945, s0.loss_bbox: 0.0431, s1.loss_cls: 0.0309, s1.acc: 97.5150, s1.loss_bbox: 0.0675, s2.loss_cls: 0.0186, s2.acc: 96.8335, s2.loss_bbox: 0.0462, loss: 0.2701
2022-09-13 21:29:38,164 - mmdet - INFO - Epoch [10][100/231]	lr: 2.000e-03, eta: 0:05:53, time: 0.676, data_time: 0.018, memory: 10249, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0100, s0.loss_cls: 0.0503, s0.acc: 97.9463, s0.loss_bbox: 0.0422, s1.loss_cls: 0.0303, s1.acc: 97.5231, s1.loss_bbox: 0.0656, s2.loss_cls: 0.0178, s2.acc: 96.8784, s2.loss_bbox: 0.0437, loss: 0.2630
2022-09-13 21:30:11,707 - mmdet - INFO - Epoch [10][150/231]	lr: 2.000e-03, eta: 0:05:24, time: 0.671, data_time: 0.018, memory: 10249, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0099, s0.loss_cls: 0.0532, s0.acc: 97.8906, s0.loss_bbox: 0.0410, s1.loss_cls: 0.0297, s1.acc: 97.6268, s1.loss_bbox: 0.0685, s2.loss_cls: 0.0185, s2.acc: 96.7814, s2.loss_bbox: 0.0479, loss: 0.2717
2022-09-13 21:30:45,431 - mmdet - INFO - Epoch [10][200/231]	lr: 2.000e-03, eta: 0:04:55, time: 0.674, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0099, s0.loss_cls: 0.0523, s0.acc: 97.8896, s0.loss_bbox: 0.0448, s1.loss_cls: 0.0297, s1.acc: 97.6239, s1.loss_bbox: 0.0713, s2.loss_cls: 0.0175, s2.acc: 96.8424, s2.loss_bbox: 0.0474, loss: 0.2768
2022-09-13 21:31:06,391 - mmdet - INFO - Saving checkpoint at 10 epochs
2022-09-13 21:31:37,287 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:31:37,646 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.399
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.619
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.385
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.374
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.218
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.450
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.527
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.527
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.527
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.453
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.360
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.568

2022-09-13 21:31:37,647 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.601 | liewen   | 0.212 | huahen   | 0.410 |
| baidian  | 0.257 | bengque  | 0.435 | zifu     | 0.880 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:31:37,656 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:31:37,656 - mmdet - INFO - Epoch(val) [10][288]	bbox_mAP: 0.3990, bbox_mAP_50: 0.6190, bbox_mAP_75: 0.3850, bbox_mAP_s: 0.3740, bbox_mAP_m: 0.2180, bbox_mAP_l: 0.4500, bbox_mAP_copypaste: 0.399 0.619 0.385 0.374 0.218 0.450
2022-09-13 21:32:13,842 - mmdet - INFO - Epoch [11][50/231]	lr: 2.000e-03, eta: 0:04:04, time: 0.721, data_time: 0.063, memory: 10249, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0094, s0.loss_cls: 0.0506, s0.acc: 97.9590, s0.loss_bbox: 0.0407, s1.loss_cls: 0.0297, s1.acc: 97.6149, s1.loss_bbox: 0.0643, s2.loss_cls: 0.0179, s2.acc: 96.9982, s2.loss_bbox: 0.0478, loss: 0.2630
2022-09-13 21:32:47,669 - mmdet - INFO - Epoch [11][100/231]	lr: 2.000e-03, eta: 0:03:35, time: 0.677, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0091, s0.loss_cls: 0.0467, s0.acc: 98.0762, s0.loss_bbox: 0.0376, s1.loss_cls: 0.0274, s1.acc: 97.7947, s1.loss_bbox: 0.0645, s2.loss_cls: 0.0172, s2.acc: 96.6956, s2.loss_bbox: 0.0451, loss: 0.2509
2022-09-13 21:33:21,576 - mmdet - INFO - Epoch [11][150/231]	lr: 2.000e-03, eta: 0:03:06, time: 0.678, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0094, s0.loss_cls: 0.0451, s0.acc: 98.1689, s0.loss_bbox: 0.0389, s1.loss_cls: 0.0273, s1.acc: 97.7846, s1.loss_bbox: 0.0612, s2.loss_cls: 0.0162, s2.acc: 97.1104, s2.loss_bbox: 0.0424, loss: 0.2437
2022-09-13 21:33:55,177 - mmdet - INFO - Epoch [11][200/231]	lr: 2.000e-03, eta: 0:02:36, time: 0.672, data_time: 0.018, memory: 10249, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0103, s0.loss_cls: 0.0522, s0.acc: 97.8174, s0.loss_bbox: 0.0454, s1.loss_cls: 0.0306, s1.acc: 97.4667, s1.loss_bbox: 0.0713, s2.loss_cls: 0.0191, s2.acc: 96.7727, s2.loss_bbox: 0.0462, loss: 0.2780
2022-09-13 21:34:15,979 - mmdet - INFO - Saving checkpoint at 11 epochs
2022-09-13 21:34:45,181 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:34:45,625 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.398
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.615
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.397
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.379
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.192
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.453
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.521
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.521
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.521
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.473
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.278
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.570

2022-09-13 21:34:45,626 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.600 | liewen   | 0.199 | huahen   | 0.406 |
| baidian  | 0.265 | bengque  | 0.430 | zifu     | 0.883 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:34:45,631 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:34:45,631 - mmdet - INFO - Epoch(val) [11][288]	bbox_mAP: 0.3980, bbox_mAP_50: 0.6150, bbox_mAP_75: 0.3970, bbox_mAP_s: 0.3790, bbox_mAP_m: 0.1920, bbox_mAP_l: 0.4530, bbox_mAP_copypaste: 0.398 0.615 0.397 0.379 0.192 0.453
2022-09-13 21:35:21,875 - mmdet - INFO - Epoch [12][50/231]	lr: 2.000e-04, eta: 0:01:47, time: 0.722, data_time: 0.063, memory: 10249, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0101, s0.loss_cls: 0.0457, s0.acc: 98.1543, s0.loss_bbox: 0.0383, s1.loss_cls: 0.0272, s1.acc: 97.8263, s1.loss_bbox: 0.0614, s2.loss_cls: 0.0169, s2.acc: 97.0191, s2.loss_bbox: 0.0421, loss: 0.2442
2022-09-13 21:35:55,345 - mmdet - INFO - Epoch [12][100/231]	lr: 2.000e-04, eta: 0:01:17, time: 0.669, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0091, s0.loss_cls: 0.0482, s0.acc: 98.0938, s0.loss_bbox: 0.0385, s1.loss_cls: 0.0276, s1.acc: 97.7334, s1.loss_bbox: 0.0609, s2.loss_cls: 0.0166, s2.acc: 97.0955, s2.loss_bbox: 0.0418, loss: 0.2451
2022-09-13 21:36:28,826 - mmdet - INFO - Epoch [12][150/231]	lr: 2.000e-04, eta: 0:00:48, time: 0.670, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0084, s0.loss_cls: 0.0443, s0.acc: 98.1650, s0.loss_bbox: 0.0379, s1.loss_cls: 0.0261, s1.acc: 97.8201, s1.loss_bbox: 0.0600, s2.loss_cls: 0.0163, s2.acc: 97.1509, s2.loss_bbox: 0.0424, loss: 0.2377
2022-09-13 21:37:02,498 - mmdet - INFO - Epoch [12][200/231]	lr: 2.000e-04, eta: 0:00:18, time: 0.673, data_time: 0.017, memory: 10249, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0091, s0.loss_cls: 0.0481, s0.acc: 98.0176, s0.loss_bbox: 0.0403, s1.loss_cls: 0.0268, s1.acc: 97.7980, s1.loss_bbox: 0.0692, s2.loss_cls: 0.0172, s2.acc: 97.0418, s2.loss_bbox: 0.0477, loss: 0.2609
2022-09-13 21:37:23,236 - mmdet - INFO - Saving checkpoint at 12 epochs
2022-09-13 21:37:52,108 - mmdet - INFO - Evaluating bbox...
2022-09-13 21:37:52,402 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.396
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.616
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.394
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.373
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.190
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.453
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.516
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.516
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.516
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.466
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.274
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.567

2022-09-13 21:37:52,403 - mmdet - INFO - 
+----------+-------+----------+-------+----------+-------+
| category | AP    | category | AP    | category | AP    |
+----------+-------+----------+-------+----------+-------+
| pomo     | 0.597 | liewen   | 0.206 | huahen   | 0.404 |
| baidian  | 0.258 | bengque  | 0.422 | zifu     | 0.883 |
| wuzi     | nan   | louguang | 0.000 | None     | None  |
+----------+-------+----------+-------+----------+-------+
2022-09-13 21:37:52,406 - mmdet - INFO - Exp name: cascade_rcnn_r50_fpn.py
2022-09-13 21:37:52,406 - mmdet - INFO - Epoch(val) [12][288]	bbox_mAP: 0.3960, bbox_mAP_50: 0.6160, bbox_mAP_75: 0.3940, bbox_mAP_s: 0.3730, bbox_mAP_m: 0.1900, bbox_mAP_l: 0.4530, bbox_mAP_copypaste: 0.396 0.616 0.394 0.373 0.190 0.453
